{"version":3,"sources":["logging/hooks/logging-hooks-module.js","logging/hooks/logging-http-hook-provider.js","logging/hooks/logging-broadcast-hook-provider.js","api/api-module.js","api/websocket-api-service.js","vendor/vendor-module.js","vendor/lodash-vendor-service.js","vendor/localforage-vendor-service.js","models/models-module.js","models/vendor-model-service.js","models/state-type-model-service.js","models/state-model-service.js","models/settings-model-service.js","models/server-info-model-service.js","models/rule-model-service.js","models/plugin-param-type-model-service.js","models/plugin-model-service.js","models/param-type-model-service.js","models/models-helper.js","models/event-type-param-type-model-service.js","models/event-type-model-service.js","models/device-model-service.js","models/device-class-state-type-model-service.js","models/device-class-param-type-model-service.js","models/device-class-model-service.js","models/device-class-event-type-service.js","models/device-class-discovery-param-type-model-service.js","models/device-class-action-type-model-service.js","models/connection-model-service.js","models/action-type-param-type-model-service.js","models/action-type-model-service.js","logging/logging-module.js","logging/logging-provider.js","utils/utils-module.js","utils/local-forage-service.js","utils/file-utils-service.js"],"names":["config","angular","module","$inject","guhLoggingHttpHook","_checkParameter","parameterName","parameter","isDefined","isString","error","_setServerAddress","locationServer","locationProtocol","locationHost","locationPort","$get","$http","logObject","post","data","then","response","console","log","payload","setProtocol","protocol","setHostname","hostname","setPort","port","getServer","location","provider","guhLoggingBroadcastHook","$rootScope","type","argsArray","args","slice","call","isArray","length","$broadcast","context","websocketService","$log","$q","$timeout","DS","_getRequestId","currentRequestId","close","ws","connect","url","isUndefined","WebSocket","connectionTimer","onopen","event","cancel","$apply","onclose","code","onerror","onmessage","message","fromJson","notification","deviceId","params","device","id","get","injectedItem","inject","is","deviceClass","name","ejectedItem","eject","stateTypeId","value","ruleId","rule","status","deviceError","callbacks","callback","reject","loggingError","ruleError","resolve","reconnect","send","request","defer","requestId","time","Date","toJson","promise","factory","lodashService","$window","_","localforageService","localforage","DSProvider","defaults","debug","DSVendorFactory","load","method","DSVendor","vendors","getAll","defineResource","endpoint","idAttribute","relations","hasMany","localField","foreignKey","computed","methods","extend","run","DSStateTypeFactory","_addUiData","resource","attrs","regExp","searchUnit","replace","phrase","test","DSStateType","deviceClassStateType","afterInject","arrayOfAttrs","forEach","DSStateFactory","states","values","map","state","DSState","belongsTo","localKey","parent","hasOne","stateType","compoundId","DSSettingsFactory","LocalForage","localForageStore","registerAdapter","localForageAdapter","default","DSSettings","serverInfo","connection","DSServerInfoFactory","ServerInfo","settings","DSServerInfo","DSRuleFactory","_loadDetails","ruleDescription","all","ruleDescriptions","DSRule","rules","add","executeActions","self","this","executeExitActions","remove","DSPluginParamTypeFactory","DSPluginParamType","plugin","paramType","DSPluginFactory","_createPluginParamTypes","pluginParamTypes","paramTypes","pluginId","paramTypeInstance","createInstance","pluginParamTypesFiltered","filter","pluginParamType","paramTypeId","pluginParamTypesId","pluginParamTypeInstance","DSPlugin","plugins","DSParamTypeFactory","DSParamType","deviceClassDiscoveryParamType","deviceClassParamType","actionTypeParamType","modelsHelper","File","app","checkTemplateUrl","templateUrl","pathElements","split","file","pop","path","join","undefined","fileExists","when","checkFile","setBasePath","basePath","apiUrl","DSEventTypeParamTypeFactory","DSEventTypeParamType","eventType","DSEventTypeFactory","_createEventTypeParamTypes","eventTypeParamTypes","eventTypeId","eventTypeParamTypesFiltered","eventTypeParamType","eventTypeParamTypesId","eventTypeParamTypeInstance","getParamDescriptor","operator","paramDescriptor","DSEventType","DSDeviceFactory","_createStates","index","stateInstance","_removeStates","DSDevice","devices","getDescription","delimiter","vendorName","vendor","deviceClassName","pair","deviceClassId","deviceDescriptorId","deviceParams","confirmPairing","pairingTransactionId","secret","edit","deviceData","deviceParamTypes","deviceParamType","deviceParam","push","update","executeAction","actionType","jsonRpcParams","actionTypeId","key","getEventDescriptor","paramDescriptors","eventDescriptor","getStateDescriptor","stateDescriptor","getAction","action","ruleActionParams","getRuleActionParams","afterEject","DSDeviceClassStateTypeFactory","DSDeviceClassStateType","DSDeviceClassParamTypeFactory","DSDeviceClassParamType","DSDeviceClassFactory","DSDeviceClassActionType","DSDeviceClassEventType","DSDeviceClass","deviceClasses","_getInputPath","filename","_addUiTemplate","templateName","toLowerCase","_createDeviceClassParamTypes","deviceClassDiscoveryParamTypes","deviceClassParamTypes","deviceClassActionTypes","deviceClassEventTypes","deviceClassStateTypes","discoveryParamTypes","actionTypes","eventTypes","stateTypes","discoveryParamType","discoveryParamTypeInstance","deviceClassDiscoveryParamTypesFiltered","deviceClassDiscoveryParamTypesId","deviceClassDiscoveryParamTypeInstance","deviceClassParamTypesFiltered","deviceClassParamTypesId","deviceClassParamTypeInstance","actionTypeInstance","deviceClassActionTypesFiltered","deviceClassActionType","deviceClassActionTypesId","deviceClassActionTypeInstance","eventTypeInstance","deviceClassEventTypesFiltered","deviceClassEventType","deviceClassEventTypesId","deviceClassEventTypeInstance","stateTypeInstance","deviceClassStateTypesFiltered","deviceClassStateTypesId","deviceClassStateTypeInstance","_mapStates","stateIds","pluck","contains","hasState","discover","discoveryParams","getCreateMethod","createMethodData","createMethods","indexOf","title","template","getSetupMethod","setupMethodData","setupMethod","getAllActionTypes","getAllEventTypes","getAllStateTypes","DSDeviceClassEventTypeFactory","DSDeviceClassDiscoveryParamTypeFactory","DSDeviceClassDiscoveryParamType","DSDeviceClassActionTypeFactory","DSConnectionFactory","Connection","DSConnection","DSActionTypeParamTypeFactory","DSActionTypeParamType","DSActionTypeFactory","_createActionTypeParamTypes","actionTypeParamTypes","actionTypeParamTypesFiltered","actionTypeParamTypesId","actionTypeParamTypeInstance","getParams","actionParamType","eventParamType","param","eventParamName","DSActionType","$provide","decorator","$injector","$delegate","guhLogging","_applyCallbacks","logType","logTypeData","getLogType","preCallbacks","preCallbackProvider","preCallback","isEnhanced","apply","postCallbacks","postCallbackProvider","postCallback","arguments","info","warn","Logging","_addHooks","prePost","logTypes","hooks","logTypesArray","hooksArray","logTypeCallbacks","hook","_hooks","_logTypes","_logType","enhanced","service","enhance","before","after","decorate","http","broadcast","websocket","DSLocalForageAdapter","JSData","FileFactory","$templateCache","cacheObject"],"mappings":"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","file":"guh-libjs.min.js","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks')\n    .provider('guhLoggingHttpHook', guhLoggingHttpHook);\n\n  function guhLoggingHttpHook() {\n    // Variables\n    var locationProtocol = location.protocol;\n    var locationHost = location.hostname;\n    var locationPort = location.port;\n    var locationServer = locationProtocol + '//' + locationHost + ':' + locationPort;\n\n\n    var provider = {\n      // Provider methods (needed)\n      $get: ['$http', $get],\n\n      // Other methods\n      getServer: getServer,\n      setProtocol: setProtocol,\n      setHostname: setHostname,\n      setPort: setPort\n    };\n\n    return provider;\n\n\n    function _checkParameter(parameterName, parameter) {\n      try {\n        if(!angular.isDefined(parameter) || parameter === null) {\n          throw 'The parameter ' + parameterName + ' has to be defined.';\n        } else if(!angular.isString(parameter)) {\n          throw 'The value of ' + parameterName + ' has to be a string.';\n        }\n      } catch(error) {\n        return;\n      }\n    }\n\n    function _setServerAddress() {\n      locationServer = locationProtocol + '//' + locationHost + ':' + locationPort;\n    }\n\n\n    function $get($http) {\n      return function(logObject) {\n        $http\n          .post(locationServer, {\n            data: logObject\n          })\n          .then(function(response) {\n            console.log('Data successfully sent.', {\n              payload: logObject,\n              response: response\n            });\n          })\n          .catch(function(error) {\n            console.log('Data not sent.', {\n              payload: logObject,\n              error: error\n            })\n          });\n      }\n\n      // console.log('$get', $http);\n\n      // var service = {\n      //   // Variables\n      //   protocol: locationProtocol,\n      //   host: locationHost,\n      //   port: locationPort,\n      //   server: locationServer,\n\n      //   // Methods\n      //   addToQueue: addToQueue\n      // };\n\n      // return service;\n\n\n      // function addToQueue($http) {\n      //   console.log('addToQueue', $http);\n      // }\n    }\n\n    function setProtocol(protocol) {\n      _checkParameter('protocol', protocol);\n      locationProtocol = protocol;\n      _setServerAddress();\n    }\n\n    function setHostname(hostname) {\n      _checkParameter('hostname', hostname);\n      locationHost = hostname;\n      _setServerAddress();\n    }\n\n    function setPort(port) {\n      _checkParameter('port', port);\n      locationPort = port;\n      _setServerAddress();\n    }\n\n    function getServer() {\n      return locationServer;\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks')\n    .provider('guhLoggingBroadcastHook', guhLoggingBroadcastHook);\n\n  function guhLoggingBroadcastHook() {\n\n    var provider = {\n      // Provider methods (needed)\n      $get: ['$rootScope', $get]\n    };\n\n    return provider;\n\n\n    function $get($rootScope) {\n      return function(logObject) {\n        var type = logObject.type ? logObject.type : null;\n        var argsArray = logObject.args ? [].slice.call(logObject.args) : null;\n\n        if(angular.isArray(argsArray)) {\n          switch(argsArray.length) {\n            case 1:\n              if(!angular.isString(argsArray[0])) {\n                $rootScope.$broadcast('notification', {\n                  type: type,\n                  args: argsArray[0]\n                });\n              }\n              break;\n            case 2:\n              $rootScope.$broadcast('notification', {\n                type: type,\n                context: argsArray[0],\n                args: argsArray[1]\n              });\n              break;\n            default:\n              console.log('Wrong number of arguments.', logObject.type, logObject.args, argsArray.length);\n          }\n        }\n      }\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.api', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.api')\n    .factory('websocketService', websocketService);\n\n  websocketService.$inject = ['$log', '$rootScope', '$q', '$timeout', 'DS'];\n\n  function websocketService($log, $rootScope, $q, $timeout, DS) {\n\n    var ws = null;\n    var connectionTimer;\n    var callbacks = {};\n    var currentRequestId = 0;\n    var websocketService = {\n      close: close,\n      connect: connect,\n      reconnect: reconnect,\n      send: send\n    };\n\n    return websocketService;\n\n    /*\n     * Private function: _getRequestId()\n     */\n    function _getRequestId() {\n      currentRequestId = currentRequestId + 1;\n      if(currentRequestId > 10000) {\n        currentRequestId = 0;\n      }\n      return currentRequestId;\n    };\n\n\n    /*\n     * Public method: close()\n     */\n    function close() {\n      if(ws) {\n        ws.close();\n        ws = null;\n      }\n    }\n\n    /*\n     * Public method: connect()\n     */\n    function connect(url) {\n      if(ws) {\n        return;\n      }\n\n      if(angular.isUndefined(url)) {\n        $log.error('guh.api.websocketService:factory', 'Missing argument: url');\n      }\n\n      ws = new WebSocket(url);\n\n      // Timeout if connecting takes to long (can take up to 1 minute, with the timeout only 2 seconds)\n      connectionTimer = $timeout(function() {\n        ws.close();\n        ws = null;\n      }, 2000);\n\n      ws.onopen = function(event) {\n        if(connectionTimer) {\n          $timeout.cancel(connectionTimer);\n        }\n\n        // Send broadcast event\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('WebsocketConnected', 'Successful connected to guh.');\n        });\n      };\n\n      ws.onclose = function(event) {\n        // Safari is not calling onerror but calls onclose with code = 1006\n        if(event.code === 1006) {\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('WebsocketConnectionError', 'There was an error connecting to guh.');\n          });\n        } else {\n          // Send broadcast event\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('WebsocketConnectionLost', 'The app has lost the connection to guh. Please check if you are connected to your network and if guh is running correctly.');\n          });\n        }\n      };\n\n      ws.onerror = function(event) {\n        // Send broadcast event\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('WebsocketConnectionError', 'There was an error connecting to guh.');\n        });\n      };\n\n      ws.onmessage = function(message) {\n        var data = angular.fromJson(message.data);\n\n        if(angular.isDefined(data.notification)) {\n          switch(data.notification) {\n            // Devices.DeviceAdded\n            case 'Devices.DeviceAdded':\n              var deviceId = data.params.device.id;\n              var device = DS.get('device', deviceId);\n\n              if(angular.isUndefined(device)) {\n                var injectedItem = DS.inject('device', data.params.device);\n\n                // Send broadcast event\n                if(DS.is('device', injectedItem)) {\n                  $rootScope.$broadcast('ReloadView', injectedItem.deviceClass.name + ' was added.');\n                }          \n              }\n\n              break;\n\n\n            // TODO: Devices.DeviceChanged\n\n\n            // Devices.DeviceRemoved\n            case 'Devices.DeviceRemoved':\n              var deviceId = data.params.deviceId;\n              var ejectedItem = DS.eject('device', deviceId);\n\n              if(angular.isDefined(ejectedItem)) {\n                // Send broadcast event\n                $rootScope.$broadcast('ReloadView', 'Device was removed.', ejectedItem);\n              }\n\n              break;\n\n\n            // Devices.StateChanged\n            case 'Devices.StateChanged':\n              var deviceId = data.params.deviceId;\n              var stateTypeId = data.params.stateTypeId;\n              var value = data.params.value;\n              DS.inject('state', {\n                id: '' + deviceId + '_' + stateTypeId,\n                deviceId: deviceId,\n                stateTypeId: stateTypeId,\n                value: value\n              });\n              break;\n\n\n            // TODO: Events.EventTriggered\n\n\n            // TODO: Logging.LogDatabaseUpdated\n\n\n            // TODO: Logging.LogEntryAdded\n\n\n            // TODO: Rules.RuleActiveChanged\n\n\n            // Rules.RuleAdded\n            case 'Rules.RuleAdded':\n              var ruleId = data.params.rule.id;\n              var rule = DS.get('rule', ruleId);\n\n              if(angular.isUndefined(rule)) {\n                var injectedItem = DS.inject('rule', data.params.rule);\n\n                // Send broadcast event\n                if(DS.is('rule', injectedItem)) {\n                  $rootScope.$broadcast('ReloadView', injectedItem.name + ' was added.');\n                }\n              }\n\n              break;\n\n\n            // Rules.ConfigurationChanged\n            case 'Rules.ConfigurationChanged':\n              var rule = data.params.rule;\n              var injectedItem = DS.inject('rule', rule);\n\n              // Send broadcast event\n              if(DS.is('rule', injectedItem)) {\n                $rootScope.$broadcast('ReloadView', injectedItem.name + ' was updated.');\n              }\n\n              break;\n\n\n            // Rules.RuleRemoved\n            case 'Rules.RuleRemoved':\n              var ruleId = data.params.ruleId;\n              var ejectedItem = DS.eject('rule', ruleId);\n\n              if(angular.isDefined(ejectedItem)) {\n                // Send broadcast event\n                $rootScope.$broadcast('ReloadView', 'Rule was removed.');\n              }\n\n              break;\n\n\n            default:\n              // $log.warn('Type of notification not handled:', data);\n          }\n\n        // } else if(angular.isDefined(data.authenticationRequired)) {\n        } else if(angular.isDefined(data.id) && data.id === 0) {\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('InitialHandshake', data);\n          });\n        } else if(angular.isDefined(data.id)) {\n          if(data.status === 'success') {\n            if(angular.isDefined(data.params.deviceError) && data.params.deviceError !== 'DeviceErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else if(angular.isDefined(data.params.loggingError) && data.params.loggingError !== 'LoggingErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else if(angular.isDefined(data.params.ruleError) && data.params.ruleError !== 'RuleErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else {\n              $rootScope.$apply(callbacks[data.id].callback.resolve(data.params));\n            }\n          } else {\n            $rootScope.$apply(callbacks[data.id].callback.reject(data.error));\n          }\n          \n          delete callbacks[data.id];\n        }\n      };\n    }\n\n    /*\n     * Public method: reconnect(url)\n     */\n    function reconnect(url) {\n      websocketService.close();\n      websocketService.connect(url);\n    }\n\n    /*\n     * Public method: send(request)\n     */\n    function send(request) {\n      var defer = $q.defer();\n      var requestId = _getRequestId();\n\n      callbacks[requestId] = {\n        time: new Date(),\n        callback: defer\n      };\n\n      request.id = requestId;\n\n      ws.send(angular.toJson(request));\n\n      return defer.promise;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor')\n    .factory('_', lodashService);\n\n  lodashService.$inject = ['$log', '$window'];\n\n  function lodashService($log, $window) {\n\n    if(!$window._) {\n      $log.error('guh.vendor.lodashService:factory', '_ is not defined on window object');\n    }\n\n    return $window._;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor')\n    .factory('localforage', localforageService);\n\n  localforageService.$inject = ['$log', '$window'];\n\n  function localforageService($log, $window) {\n\n    if(!$window.localforage) {\n      $log.error('guh.vendor.localforageService:factory', 'localforage is not defined on window object');\n    }\n\n    return $window.localforage;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models', [\n      // Datastore\n      'js-data'\n    ])\n    .config(config);\n\n  config.$inject = ['DSProvider'];\n\n  function config(DSProvider) {\n    DSProvider\n      .defaults\n      .debug = false;\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSVendor', DSVendorFactory)\n    .run(function(DSVendor) {});\n\n  DSVendorFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSVendorFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSVendor = DS.defineResource({\n\n      // API configuration\n      endpoint: 'vendors',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'vendor',\n      relations: {\n        hasMany: {\n          deviceClass: {\n            localField: 'deviceClasses',\n            foreignKey: 'vendorId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSVendor, {\n      load: load\n    });\n\n    return DSVendor;\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetSupportedVendors'\n        })\n        .then(function(data) {\n          DSVendor.inject(data.vendors);\n          return DSVendor.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSStateType', DSStateTypeFactory)\n    .run(function(DSStateType) {});\n\n  DSStateTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSStateTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSStateType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'statetypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'stateType',\n      relations: {\n        hasMany: {\n          deviceClassStateType: {\n            localField: 'deviceClassStateTypes',\n            foreignKey: 'stateTypeId'\n          },\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {},\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSStateType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var regExp = /\\s\\[([^)]+)\\]/;                 // Value inside brackets []\n      var searchUnit = name.replace(regExp, '');    // Get value inside brackets\n      var phrase = attrs.name;\n\n      // If name contains the unit in brackets []\n      if(regExp.test(name)) {\n        phrase = searchUnit;\n      }\n\n      // phrase\n      attrs.phrase = 'When value of ' + phrase;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSState', DSStateFactory)\n    .run(function(DSState) {});\n\n  DSStateFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSStateFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSState = DS.defineResource({\n\n      // API configuration\n      endpoint: 'states',\n\n      // Model configuration\n      // idAttribute: 'stateTypeId',\n      idAttribute: 'compoundId',\n      name: 'state',\n      relations: {\n        belongsTo: {\n          device: {\n            localField: 'device',\n            localKey: 'deviceId',\n            parent: true\n          }\n        },\n        hasOne: {\n          stateType: {\n            localField: 'stateType',\n            localKey: 'stateTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {\n        compoundId: ['deviceId', 'stateTypeId', 'value', function (deviceId, stateTypeId, value) {\n          return '' + deviceId + '_' + stateTypeId;\n        }]\n      },\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSState, {\n      load: load\n    });\n\n    return DSState;\n\n\n    function load(deviceId) {\n      return websocketService\n        .send({\n          method: 'Devices.GetStateValues',\n          params: {\n            deviceId: deviceId\n          }\n        })\n        .then(function(data) {\n          var states = data.values.map(function(state) {\n            state.deviceId = deviceId;\n            return state;\n          });\n          DSState.inject(states);\n          return DSState.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSSettings', DSSettingsFactory)\n    .run(function(DSSettings) {});\n\n\n  DSSettingsFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSSettingsFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var DSSettings = LocalForage.localForageStore.defineResource({\n      name: 'settings',\n      relations: {\n        hasOne: {\n          serverInfo: {\n            localField: 'serverInfo',\n            foreignKey: 'settingsId'\n          }\n        },\n        hasMany: {\n          connection: {\n            localField: 'connections',\n            foreignKey: 'settingsId'\n          }\n        }\n      }\n    });\n\n    return DSSettings;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSServerInfo', DSServerInfoFactory)\n    .run(function(DSServerInfo) {});\n\n\n  DSServerInfoFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSServerInfoFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var ServerInfo = LocalForage.localForageStore.defineResource({\n      name: 'serverInfo',\n      relations: {\n        belongsTo: {\n          settings: {\n            localField: 'settings',\n            foreignKey: 'settingsId',\n            parent: true\n          }\n        }\n      }\n    });\n\n    return ServerInfo;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSRule', DSRuleFactory)\n    .run(function(DSRule) {});\n\n  DSRuleFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSRuleFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSRule = DS.defineResource({\n\n      // API configuration\n      endpoint: 'rules',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'rule',\n      relations: {},\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        // API\n        executeActions: executeActions,\n        executeExitActions: executeExitActions,\n        remove: remove\n      }\n\n    });\n\n    angular.extend(DSRule, {\n      load: load,\n      add: add\n    });\n\n    return DSRule;\n\n\n    function _loadDetails(ruleDescription) {\n      return websocketService\n        .send({\n          method: 'Rules.GetRuleDetails',\n          params: {\n            ruleId: ruleDescription.id\n          }\n        });\n    }\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Rules.GetRules'\n        })\n        .then(function(data) {\n          return $q.all(data.ruleDescriptions.map(function(ruleDescription) {\n            return _loadDetails(ruleDescription)\n              .then(function(data) {\n                DSRule.inject(data.rule);\n                return data.rule;\n              });\n          }));\n        })\n        .then(function(rules) {\n          return DSRule.getAll();\n        });\n    }\n\n    function add(rule) {\n      return websocketService.send({\n        method: 'Rules.AddRule',\n        params: rule\n      });\n    }\n\n    /*\n     * Public method: executeActions()\n     */\n    function executeActions() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.ExecuteActions',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n    /*\n     * Public method: executeExitActions()\n     */\n    function executeExitActions() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.ExecuteExitActions',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n    /*\n     * Public method: remove()\n     */\n    function remove() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.RemoveRule',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSPluginParamType', DSPluginParamTypeFactory)\n    .run(function(DSPluginParamType) {});\n\n  DSPluginParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSPluginParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSPluginParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'pluginParamType',\n      relations: {\n        belongsTo: {\n          plugin: {\n            localField: 'plugin',\n            localKey: 'pluginId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSPluginParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSPlugin', DSPluginFactory)\n    .run(function(DSPlugin) {});\n\n  DSPluginFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSPluginFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n    var pluginParamTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSPlugin = DS.defineResource({\n\n      // API configuration\n      endpoint: 'plugins',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'plugin',\n      relations: {\n        hasMany: {\n          pluginParamType: {\n            localField: 'pluginParamTypes',\n            foreignKey: 'pluginId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {},\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _createPluginParamTypes(resource, attrs);\n          });\n        } else {\n          _createPluginParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    angular.extend(DSPlugin, {\n      load: load\n    });\n\n    return DSPlugin;\n\n\n    /*\n     * Private method: _createPluginParamTypes()\n     */\n    function _createPluginParamTypes(resource, attrs) {\n      var pluginParamTypes = DS.getAll('pluginParamType');\n      var paramTypes = attrs.paramTypes;\n      var pluginId = attrs.id;\n\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered actionTypeParamTypes\n        var pluginParamTypesFiltered = pluginParamTypes.filter(function(pluginParamType) {\n          return pluginParamType.pluginId === pluginId && pluginParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(pluginParamTypesFiltered) && pluginParamTypesFiltered.length === 0) {\n          // Create membership (plugin <-> paramType)\n          pluginParamTypesId = pluginParamTypesId + 1;\n          var pluginParamTypeInstance = DS.createInstance('pluginParamType', {\n            id: pluginParamTypesId,\n            pluginId: pluginId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('pluginParamType', pluginParamTypeInstance);\n        }\n      });\n    }\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetPlugins'\n        })\n        .then(function(data) {\n          DSPlugin.inject(data.plugins);\n          return DSPlugin.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSParamType', DSParamTypeFactory)\n    .run(function(DSParamType) {});\n\n  DSParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'paramType',\n      relations: {\n        hasMany: {\n          deviceClassDiscoveryParamType: {\n            localField: 'deviceClassDiscoveryParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          deviceClassParamType: {\n            localField: 'deviceClassParamTypes',\n            foreignKey: 'paramTypeId'\n          },\n          actionTypeParamType: {\n            localField: 'actionTypeParamTypes',\n            foreignKey: 'paramTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    return DSParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('modelsHelper', modelsHelper);\n\n  modelsHelper.$inject = ['$log', '$q', 'DS', 'File', 'app'];\n\n  function modelsHelper($log, $q, DS, File, app) {\n\n    var modelsHelper = {\n      checkTemplateUrl: checkTemplateUrl,\n      setBasePath: setBasePath\n    };\n\n    return modelsHelper;\n\n\n    /*\n     * Private method: _getValue(guhType)\n     */\n    function _getValue(guhType) {\n      var type = (guhType.type === undefined) ? null : guhType.type;\n      var value;\n\n      switch(type) {\n        case 'Bool':\n          value = guhType.defaultValue || false;\n          break;\n        case 'Int':\n        case 'Uint':\n          value = guhType.defaultValue || 0;\n          break;\n        case 'Double':\n          value = guhType.defaultValue || 0.0;\n          break;\n        case 'Color':\n          value = guhType.defaultValue || '0,0,0';\n          break;\n        case 'String':\n          value = guhType.defaultValue || '';\n          break;\n        default:\n          value = guhType.defaultValue || undefined;\n          break;\n      }\n\n      return value;\n    }\n    \n\n    /*\n     * Public method: checkTemplateUrl(templateUrl)\n     */\n    function checkTemplateUrl(templateUrl) {\n      var pathElements = templateUrl.split('/');\n      var file = pathElements.pop();\n      var path = pathElements.join('/') + '/';\n\n      if(templateUrl !== undefined && templateUrl !== '') {\n        var fileExists = $q.when(File.checkFile(path, file))\n          .then(function(fileExists) {\n            if(fileExists) {\n              // $log.log('Template available', templateUrl);\n              return templateUrl;\n            } else {\n              // $log.warn('Template NOT available', templateUrl);\n              return path + 'template-not-available.html'; \n            }\n          });\n\n        return fileExists;\n      } else {\n        return path + 'template-not-defined.html';\n      }\n    }\n\n    /*\n     * Public method: setBasePath()\n     */\n    function setBasePath() {      \n      DS\n        .defaults\n        .basePath = app.apiUrl;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSEventTypeParamType', DSEventTypeParamTypeFactory)\n    .run(function(DSEventTypeParamType) {});\n\n  DSEventTypeParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSEventTypeParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSEventTypeParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'eventTypeParamType',\n      relations: {\n        belongsTo: {\n          eventType: {\n            localField: 'eventType',\n            localKey: 'eventTypeId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSEventTypeParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSEventType', DSEventTypeFactory)\n    .run(function(DSEventType) {});\n\n  DSEventTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSEventTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n    var eventTypeParamTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSEventType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'eventtypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'eventType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId',\n            parent: true\n          }\n        },\n        hasMany: {\n          eventTypeParamType: {\n            localField: 'eventTypeParamTypes',\n            foreignKey: 'eventTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        getParamDescriptor: getParamDescriptor\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n            _createEventTypeParamTypes(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n          _createEventTypeParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSEventType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var paramTypes = attrs.paramTypes;\n      var phrase = 'When ' + attrs.name;\n\n      // Add phrase for moods\n      if(angular.isArray(paramTypes) && paramTypes.length === 0) {\n        attrs.phrase = phrase + ' is detected';\n      } else {\n        attrs.phrase = phrase + ' is detected and parameters are';\n      }\n    }\n\n    /*\n     * Private method:_createEventTypeParamTypes()\n     */\n    function _createEventTypeParamTypes(resource, attrs) {\n      var eventTypeParamTypes = DS.getAll('eventTypeParamType');\n      var paramTypes = attrs.paramTypes;\n      var eventTypeId = attrs.id;\n\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered eventTypeParamTypes\n        var eventTypeParamTypesFiltered = eventTypeParamTypes.filter(function(eventTypeParamType) {\n          return eventTypeParamType.eventTypeId === eventTypeId && eventTypeParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(eventTypeParamTypesFiltered) && eventTypeParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> paramType)\n          eventTypeParamTypesId = eventTypeParamTypesId + 1;\n          var eventTypeParamTypeInstance = DS.createInstance('eventTypeParamType', {\n            id: eventTypeParamTypesId,\n            eventTypeId: eventTypeId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('eventTypeParamType', eventTypeParamTypeInstance);\n        }\n      });\n    }\n\n\n    /*\n     * Public method: getParamDescriptors(paramType, value, operator)\n     */\n    function getParamDescriptor(paramType, value, operator) {\n      var paramDescriptor = {};\n\n      paramDescriptor = {\n        name: paramType.name,\n        operator: operator,\n        value: value\n      };\n\n      return paramDescriptor;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDevice', DSDeviceFactory)\n    .run(function(DSDevice) {});\n\n  DSDeviceFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSDeviceFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDevice = DS.defineResource({\n\n      // API configuration\n      endpoint: 'devices',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'device',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          }\n        }\n\n        // Not working (error: \"Doh! You just changed the primary key of an object!\") because states are injected before the state primary keys are generated\n        // hasMany: {\n        //   state: {\n        //     localField: 'states',\n        //     foreignKey: 'deviceId'\n        //   }\n        // }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        executeAction: executeAction,\n        remove: remove,\n        getDescription: getDescription,\n        getEventDescriptor: getEventDescriptor,\n        getStateDescriptor: getStateDescriptor,\n        getAction: getAction\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _createStates(resource, attrs);\n          });\n        } else {\n          _createStates(resource, attrs);\n        }\n      },\n\n      afterEject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _removeStates(resource, attrs);\n          });\n        } else {\n          _removeStates(resource, attrs);\n        }\n      }\n\n    });\n\n    angular.extend(DSDevice, {\n      load: load,\n      add: add,\n      edit: edit,\n      pair: pair,\n      confirmPairing: confirmPairing\n    });\n\n    return DSDevice;\n    \n\n    /*\n     * Private method: _createStates(resource, attrs);\n     */\n    function _createStates(resource, attrs) {\n      var deviceId = attrs.id;\n      var states = attrs.states;\n\n      angular.forEach(states, function(state, index) {\n        state.deviceId = deviceId;\n\n        var stateInstance = DS.createInstance('state', state);\n        DS.inject('state', stateInstance);\n\n        if(angular.isUndefined(attrs.states)) {\n          attrs.states = [];\n        }\n        attrs.states[index] = DS.get('state', '' + deviceId + '_' + state.stateTypeId);\n      });\n    }\n\n    /*\n     * Private method: _removeStates(resource, attrs)\n     */\n    function _removeStates(resource, attrs) {\n      var deviceId = attrs.id;\n      var states = attrs.states;\n\n      angular.forEach(states, function(state, index) {\n        var ejectedItem = DS.eject('state', '' + deviceId + '_' + state.stateTypeId);\n      });\n    }\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetConfiguredDevices'\n        })\n        .then(function(data) {\n          DSDevice.inject(data.devices);\n          return DSDevice.getAll();\n        });\n    }\n\n    /*\n     * Public method: getDescription(delimiter)\n     */\n    function getDescription(delimiter) {\n      /* jshint validthis: true */\n      var self = this;\n      var vendorName = self.deviceClass.vendor.name;\n      var deviceClassName = self.deviceClass.name || '';\n\n      delimiter = delimiter || '-';\n\n      return (vendorName === deviceClassName) ? deviceClassName : (vendorName + delimiter + deviceClassName);\n    }\n\n    /*\n     * Public method: pair(deviceClassId, deviceDescriptorId, deviceParams, name)\n     */\n    function pair(deviceClassId, deviceDescriptorId, deviceParams, name) {\n      var params = {};\n\n      params.deviceClassId = deviceClassId || '';\n\n      if(angular.isDefined(deviceDescriptorId) && deviceDescriptorId !== '') {\n        params.deviceDescriptorId = deviceDescriptorId;\n      } else {\n        params.deviceParams = deviceParams || [];\n      }\n\n      if(angular.isDefined(name)) {\n        params.name = name;\n      }\n\n      return websocketService.send({\n        method: 'Devices.PairDevice',\n        params: params\n      });\n    }\n\n    /*\n     * Public method: confirmPairing(pairingTransactionId, secret)\n     */\n    function confirmPairing(pairingTransactionId, secret) {\n      var params = {};\n      \n      params.pairingTransactionId = pairingTransactionId;\n\n      if(secret) {\n        params.secret = secret;\n      }\n\n      return websocketService.send({\n        method: 'Devices.ConfirmPairing',\n        params: params\n      }); \n    }\n\n    /*\n     * Public method: add(deviceClassId, deviceDescriptorId, deviceParams, name)\n     */\n    function add(deviceClassId, deviceDescriptorId, deviceParams, name) {\n      var params = {};\n\n      // name\n      if(angular.isDefined(name) && name !== '') {\n        params.name = name;\n      }\n\n      // deviceClassId\n      if(angular.isDefined(deviceClassId) && deviceClassId  !== '') {\n        params.deviceClassId = deviceClassId;\n      }\n\n      // deviceDescriptorId or deviceParams\n      if(angular.isDefined(deviceDescriptorId) && deviceDescriptorId !== '') {\n        params.deviceDescriptorId = deviceDescriptorId;\n      } else if(angular.isDefined(deviceParams) && deviceParams !== []) {\n        params.deviceParams = deviceParams;\n      }\n\n      // Device gets inserted when notification \"Devices.DeviceAdded\" was received\n      return websocketService.send({\n        method: 'Devices.AddConfiguredDevice',\n        params: params\n      });\n    }\n\n    /*\n     * Public method: edit(deviceId, deviceData)\n     */\n    function edit(deviceId, deviceData) {\n      var device = {};\n      deviceData = deviceData || {};\n\n      device.deviceDescriptorId = deviceData.id || '';\n\n      device.deviceParams = [];\n      angular.forEach(deviceData.deviceParamTypes, function(deviceParamType) {\n        var deviceParam = {};\n\n        deviceParam.name = deviceParamType.name;\n        deviceParam.value = deviceParamType.value;\n\n        device.deviceParams.push(deviceParam);\n      });\n\n      return DSDevice.update(deviceId, {device: device});\n    }\n\n    /*\n     * Public method: executeAction()\n     */\n    function executeAction(actionType, params) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        actionTypeId: actionType.id,\n        deviceId: self.id\n      };\n\n      if(angular.isDefined(params) && params !== {}) {\n        jsonRpcParams.params = params;\n      }\n\n      return websocketService.send({\n        method: 'Actions.ExecuteAction',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: remove()\n     */\n    function remove(params) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        deviceId: self.id\n      };\n\n      if(angular.isDefined(params) && params !== {}) {\n        angular.forEach(params, function(value, key) {\n          jsonRpcParams[key] = value;\n        });\n      }\n\n      return websocketService.send({\n        method: 'Devices.RemoveConfiguredDevice',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: getEventDescriptor(eventType, paramDescriptors)\n     */\n    function getEventDescriptor(eventType, paramDescriptors) {\n      /* jshint validthis: true */\n      var self = this;\n      var eventDescriptor = {};\n\n      eventDescriptor.deviceId = self.id;\n      eventDescriptor.eventTypeId = eventType.id;\n\n      if(angular.isDefined(paramDescriptors) && paramDescriptors.length > 0) {\n        eventDescriptor.paramDescriptors = paramDescriptors;\n      }\n\n      return eventDescriptor;     \n    }\n\n    /*\n     * Public method: getStateDescriptor(stateType, paramDescriptor)\n     */\n    function getStateDescriptor(stateType, paramDescriptor) {\n      /* jshint validthis: true */\n      var self = this;\n      var stateDescriptor = {};\n\n      stateDescriptor.deviceId = self.id;\n      stateDescriptor.operator = paramDescriptor.operator;\n      stateDescriptor.stateTypeId = stateType.id;\n      stateDescriptor.value = paramDescriptor.value;\n      \n      return stateDescriptor;\n    }\n\n\n    /*\n     * Public method: getAction(actionType, params)\n     */\n    function getAction(actionType, params) {\n      /* jshint validthis: true */\n      var self = this;\n      var action = {};\n      var ruleActionParams = [];\n\n      ruleActionParams = actionType.getRuleActionParams(params);\n      if(ruleActionParams.length > 0) {\n        action.ruleActionParams = ruleActionParams;\n      }\n\n      action.actionTypeId = actionType.id;\n      action.deviceId = self.id;\n\n      return action;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassStateType', DSDeviceClassStateTypeFactory)\n    .run(function(DSDeviceClassStateType) {});\n\n  DSDeviceClassStateTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassStateTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassStateType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassStateType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          stateType: {\n            localField: 'stateType',\n            localKey: 'stateTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassStateType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassParamType', DSDeviceClassParamTypeFactory)\n    .run(function(DSDeviceClassParamType) {});\n\n  DSDeviceClassParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassParamType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClass', DSDeviceClassFactory)\n    .run(function(DSDeviceClass) {});\n\n  DSDeviceClassFactory.$inject = ['$log', '$q', 'DS', '_', 'websocketService', 'modelsHelper', 'DSDeviceClassParamType', 'DSDeviceClassActionType', 'DSDeviceClassEventType', 'DSDeviceClassStateType'];\n\n  function DSDeviceClassFactory($log, $q, DS, _, websocketService, modelsHelper, DSDeviceClassParamType, DSDeviceClassActionType, DSDeviceClassEventType, DSDeviceClassStateType) {\n    \n    var staticMethods = {};\n    var deviceClassDiscoveryParamTypesId = 0;\n    var deviceClassParamTypesId = 0;\n    var deviceClassActionTypesId = 0;\n    var deviceClassEventTypesId = 0;\n    var deviceClassStateTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClass = DS.defineResource({\n\n      // API configuration\n      endpoint: 'deviceclasses',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'deviceClass',\n      relations: {\n        belongsTo: {\n          vendor: {\n            localField: 'vendor',\n            localKey: 'vendorId',\n            // parent: true\n          }\n        },\n        hasMany: {\n          deviceClassDiscoveryParamType: {\n            localField: 'deviceClassDiscoveryParamTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassParamType: {\n            localField: 'deviceClassParamTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassActionType: {\n            localField: 'deviceClassActionTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassEventType: {\n            localField: 'deviceClassEventTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassStateType: {\n            localField: 'deviceClassStateTypes',\n            foreignKey: 'deviceClassId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {\n        templateUrl: ['name', _addUiTemplate]\n      },\n\n      // Instance methods\n      methods: {\n        discover: discover,\n        getCreateMethod: getCreateMethod,\n        getSetupMethod: getSetupMethod\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _mapStates(resource, attrs);\n            _createDeviceClassParamTypes(resource, attrs);\n          });\n        } else {\n          _mapStates(resource, attrs);\n          _createDeviceClassParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    DSDeviceClass.getAllActionTypes = function(deviceClassId) {\n      var deviceClassActionTypes = DSDeviceClassActionType.getAll();\n      var deviceClassActionTypesFiltered = deviceClassActionTypes.filter(function(deviceClassActionType) {\n        return deviceClassActionType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var actionTypes = [];\n\n      angular.forEach(deviceClassActionTypesFiltered, function(deviceClassActionType) {\n        if(deviceClassActionType.deviceClassId === deviceClassId) {\n          var actionType = DS.get('actionType', deviceClassActionType.actionTypeId);\n          actionTypes.push(actionType);\n        }\n      });\n\n      return actionTypes;\n    };\n\n    DSDeviceClass.getAllEventTypes = function(deviceClassId) {\n      var deviceClassEventTypes = DSDeviceClassEventType.getAll();\n      var deviceClassEventTypesFiltered = deviceClassEventTypes.filter(function(deviceClassEventType) {\n        return deviceClassEventType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var eventTypes = [];\n\n      angular.forEach(deviceClassEventTypesFiltered, function(deviceClassEventType) {\n        if(deviceClassEventType.deviceClassId === deviceClassId) {\n          var eventType = DS.get('eventType', deviceClassEventType.eventTypeId);\n          eventTypes.push(eventType);\n        }\n      });\n\n      return eventTypes;\n    };\n\n    DSDeviceClass.getAllStateTypes = function(deviceClassId) {\n      var deviceClassStateTypes = DSDeviceClassStateType.getAll();\n      var deviceClassStateTypesFiltered = deviceClassStateTypes.filter(function(deviceClassStateType) {\n        return deviceClassStateType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var stateTypes = [];\n\n      angular.forEach(deviceClassStateTypesFiltered, function(deviceClassStateType) {\n        if(deviceClassStateType.deviceClassId === deviceClassId) {\n          var stateType = DS.get('stateType', deviceClassStateType.stateTypeId);\n          stateTypes.push(stateType);\n        }\n      });\n\n      return stateTypes;\n    };\n\n    angular.extend(DSDeviceClass, {\n      load: load\n    });\n\n    return DSDeviceClass;\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetSupportedDevices'\n        })\n        .then(function(data) {\n          DSDeviceClass.inject(data.deviceClasses);\n          return DSDeviceClass.getAll();\n        });\n    }\n\n\n    /*\n     * Private method: _getInputPath(name, filename)\n     */\n    function _getInputPath(name, filename) {\n      return 'app/containers/thing-details/device-class-templates/' + filename + '.html';\n    }\n\n    /*\n     * Private method: _addUiTemplate(name)\n     */\n    function _addUiTemplate(name) {\n      // Example: 'Elro Remote' => 'elro-remote'\n      var templateName = name\n        .toLowerCase()\n        .replace(/\\s/g, '-')\n        .replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '');\n      var templateUrl = _getInputPath(name, 'device-class-' + templateName);\n\n      return modelsHelper.checkTemplateUrl(templateUrl);\n    }\n\n    /*\n     * Private method:_createDeviceClassParamTypes()\n     */\n    function _createDeviceClassParamTypes(resource, attrs) {\n      var deviceClassDiscoveryParamTypes = DS.getAll('deviceClassDiscoveryParamType');\n      var deviceClassParamTypes = DS.getAll('deviceClassParamType');\n      var deviceClassActionTypes = DS.getAll('deviceClassActionType');\n      var deviceClassEventTypes = DS.getAll('deviceClassEventType');\n      var deviceClassStateTypes = DS.getAll('deviceClassStateType');\n      var discoveryParamTypes = attrs.discoveryParamTypes;\n      var paramTypes = attrs.paramTypes;\n      var actionTypes = attrs.actionTypes;\n      var eventTypes = attrs.eventTypes;\n      var stateTypes = attrs.stateTypes;\n      var deviceClassId = attrs.id;\n\n\n      // DiscoveryParamTypes\n      angular.forEach(discoveryParamTypes, function(discoveryParamType) {\n        // Create discoveryParamType\n        var discoveryParamTypeInstance = DS.createInstance('paramType', discoveryParamType);\n        DS.inject('paramType', discoveryParamTypeInstance);\n\n        // Filtered deviceClassDiscoveryParamTypes\n        var deviceClassDiscoveryParamTypesFiltered = deviceClassDiscoveryParamTypes.filter(function(deviceClassDiscoveryParamType) {\n          return deviceClassDiscoveryParamType.deviceClassId === deviceClassId && deviceClassDiscoveryParamType.paramTypeId === discoveryParamType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassDiscoveryParamTypesFiltered) && deviceClassDiscoveryParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> discoveryParamType)\n          deviceClassDiscoveryParamTypesId = deviceClassDiscoveryParamTypesId + 1;\n          var deviceClassDiscoveryParamTypeInstance = DS.createInstance('deviceClassDiscoveryParamType', {\n            id: deviceClassDiscoveryParamTypesId,\n            deviceClassId: deviceClassId,\n            paramTypeId: discoveryParamType.id\n          });\n          DS.inject('deviceClassDiscoveryParamType', deviceClassDiscoveryParamTypeInstance);\n        }\n      });\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered deviceClassParamTypes\n        var deviceClassParamTypesFiltered = deviceClassParamTypes.filter(function(deviceClassParamType) {\n          return deviceClassParamType.deviceClassId === deviceClassId && deviceClassParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassParamTypesFiltered) && deviceClassParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> paramType)\n          deviceClassParamTypesId = deviceClassParamTypesId + 1;\n          var deviceClassParamTypeInstance = DS.createInstance('deviceClassParamType', {\n            id: deviceClassParamTypesId,\n            deviceClassId: deviceClassId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('deviceClassParamType', deviceClassParamTypeInstance);\n        }\n      });\n\n      // ActionTypes\n      angular.forEach(actionTypes, function(actionType) {\n        // Create actionType\n        var actionTypeInstance = DS.createInstance('actionType', actionType);\n        DS.inject('actionType', actionTypeInstance);\n\n        // Filtered deviceClassActionTypes\n        var deviceClassActionTypesFiltered = deviceClassActionTypes.filter(function(deviceClassActionType) {\n          return deviceClassActionType.deviceClassId === deviceClassId && deviceClassActionType.actionTypeId === actionType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassActionTypesFiltered) && deviceClassActionTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> actionType)\n          deviceClassActionTypesId = deviceClassActionTypesId + 1;\n          var deviceClassActionTypeInstance = DS.createInstance('deviceClassActionType', {\n            id: deviceClassActionTypesId,\n            deviceClassId: deviceClassId,\n            actionTypeId: actionType.id\n          });\n          DS.inject('deviceClassActionType', deviceClassActionTypeInstance);\n        }\n      });\n\n      // EventTypes\n      angular.forEach(eventTypes, function(eventType) {\n        // Create eventType\n        var eventTypeInstance = DS.createInstance('eventType', eventType);\n        DS.inject('eventType', eventTypeInstance);\n\n        // Filtered deviceClassEventTypes\n        var deviceClassEventTypesFiltered = deviceClassEventTypes.filter(function(deviceClassEventType) {\n          return deviceClassEventType.deviceClassId === deviceClassId && deviceClassEventType.eventTypeId === eventType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassEventTypesFiltered) && deviceClassEventTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> eventType)\n          deviceClassEventTypesId = deviceClassEventTypesId + 1;\n          var deviceClassEventTypeInstance = DS.createInstance('deviceClassEventType', {\n            id: deviceClassEventTypesId,\n            deviceClassId: deviceClassId,\n            eventTypeId: eventType.id\n          });\n          DS.inject('deviceClassEventType', deviceClassEventTypeInstance);\n        }\n      });\n\n      // StateTypes\n      angular.forEach(stateTypes, function(stateType) {\n        // Create stateType\n        var stateTypeInstance = DS.createInstance('stateType', stateType);\n        DS.inject('stateType', stateTypeInstance);\n\n        // Filtered deviceClassStateTypes\n        var deviceClassStateTypesFiltered = deviceClassStateTypes.filter(function(deviceClassStateType) {\n          return deviceClassStateType.deviceClassId === deviceClassId && deviceClassStateType.stateTypeId === stateType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassStateTypesFiltered) && deviceClassStateTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> actionType)\n          deviceClassStateTypesId = deviceClassStateTypesId + 1;\n          var deviceClassStateTypeInstance = DS.createInstance('deviceClassStateType', {\n            id: deviceClassStateTypesId,\n            deviceClassId: deviceClassId,\n            stateTypeId: stateType.id\n          });\n          DS.inject('deviceClassStateType', deviceClassStateTypeInstance);\n        }\n      });\n    }\n\n    /*\n     * Private method: _mapStates(resource, attrs)\n     */\n    function _mapStates(resource, attrs) {\n      var actionTypes = attrs.actionTypes;\n      var eventTypes = attrs.eventTypes;\n      var stateTypes = attrs.stateTypes;\n      // var stateIds = libs._.pluck(stateTypes, 'id');\n      var stateIds = _.pluck(stateTypes, 'id');\n\n      // Map actionTypes\n      angular.forEach(actionTypes, function(actionType) {\n        // Check if current actionType belongs to a stateType\n        if(_.contains(stateIds, actionType.id)) {\n          actionType.hasState = true;\n        } else {\n          actionType.hasState = false;\n        }\n      });\n\n      // Map eventTypes\n      angular.forEach(eventTypes, function(eventType) {\n        // Check if current eventType belongs to a stateType\n        if(_.contains(stateIds, eventType.id)) {\n          eventType.hasState = true;\n        } else {\n          eventType.hasState = false;\n        }\n      });\n    }\n\n\n    /*\n     * Public method: discover(discoveryParams)\n     */\n    function discover(discoveryParams) {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Devices.GetDiscoveredDevices',\n        params: {\n          deviceClassId: self.id,\n          discoveryParams: discoveryParams\n        }\n      });\n    }\n\n    /*\n     * Public method: getCreateMethod()\n     */\n    function getCreateMethod() {\n      /* jshint validthis: true */\n      var self = this;\n      var basePath = 'app/components/create-thing/templates/';\n      var createMethodData = null;\n\n      if(self.createMethods.indexOf('CreateMethodDiscovery') > -1) {\n        createMethodData = {\n          title: 'Discovery',\n          template: basePath + 'create-thing-discovery.html'\n        };\n      } else if(self.createMethods.indexOf('CreateMethodUser') > -1) {\n        createMethodData = {\n          title: 'User',\n          template: basePath + 'create-thing-user.html'\n        };\n      } else if(self.createMethods.indexOf('CreateMethodAuto') > -1) {\n        createMethodData = {\n          title: 'Auto',\n          template: null\n        };\n      } else {\n        $log.error('CreateMethod not implemented.');\n      }\n\n      return createMethodData;\n    }\n\n    /*\n     * Public method: getSetupMethod()\n     */\n    function getSetupMethod() {\n      /* jshint validthis: true */\n      var self = this;\n      var basePath = 'app/components/setup-thing/templates/';\n      var setupMethodData = {};\n\n      switch(self.setupMethod) {\n        case 'SetupMethodJustAdd':\n          setupMethodData = null;\n          break;\n        case 'SetupMethodDisplayPin':\n          setupMethodData = {\n            title: 'Display Pin',\n            template: basePath + 'setup-thing-display-pin.html'\n          };\n          break;\n        case 'SetupMethodEnterPin':\n          setupMethodData = {\n            title: 'Enter Pin',\n            template: basePath + 'setup-thing-enter-pin.html'\n          };\n          break;\n        case 'SetupMethodPushButton':\n          setupMethodData = {\n            title: 'Push Button',\n            template: basePath + 'setup-thing-push-button.html'\n          };\n          break;\n        default:\n          $log.error('SetupMethod not implemented.');\n          break;\n      }\n\n      return setupMethodData;\n    }\n\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassEventType', DSDeviceClassEventTypeFactory)\n    .run(function(DSDeviceClassEventType) {});\n\n  DSDeviceClassEventTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassEventTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassEventType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassEventType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          eventType: {\n            localField: 'eventType',\n            localKey: 'eventTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassEventType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassDiscoveryParamType', DSDeviceClassDiscoveryParamTypeFactory)\n    .run(function(DSDeviceClassDiscoveryParamType) {});\n\n  DSDeviceClassDiscoveryParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassDiscoveryParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassDiscoveryParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassDiscoveryParamType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          paramType: {\n            localField: 'discoveryParamType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassDiscoveryParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassActionType', DSDeviceClassActionTypeFactory)\n    .run(function(DSDeviceClassActionType) {});\n\n  DSDeviceClassActionTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassActionTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassActionType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassActionType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          actionType: {\n            localField: 'actionType',\n            localKey: 'actionTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassActionType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSConnection', DSConnectionFactory)\n    .run(function(DSConnection) {});\n\n\n  DSConnectionFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSConnectionFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var Connection = LocalForage.localForageStore.defineResource({\n      name: 'connection',\n      relations: {\n        belongsTo: {\n          settings: {\n            localField: 'settings',\n            localKey: 'settingsId',\n            parent: true\n          }\n        }\n      }\n    });\n\n    return Connection;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSActionTypeParamType', DSActionTypeParamTypeFactory)\n    .run(function(DSActionTypeParamType) {});\n\n  DSActionTypeParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSActionTypeParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSActionTypeParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'actionTypeParamType',\n      relations: {\n        belongsTo: {\n          actionType: {\n            localField: 'actionType',\n            localKey: 'actionTypeId'\n          },\n          paramType: {\n            localField: 'paramType',\n            localKey: 'paramTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSActionTypeParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSActionType', DSActionTypeFactory)\n    .run(function(DSActionType) {});\n\n  DSActionTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSActionTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n    var actionTypeParamTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSActionType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'actiontypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'actionType',\n      relations: {\n        hasMany: {\n          deviceClassActionType: {\n            localField: 'deviceClassActionTypes',\n            foreignKey: 'actionTypeId'\n          },\n          actionTypeParamType: {\n            localField: 'actionTypeParamTypes',\n            foreignKey: 'actionTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        getParams: getParams,\n        getRuleActionParams: getRuleActionParams\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n            _createActionTypeParamTypes(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n          _createActionTypeParamTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSActionType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var paramTypes = attrs.paramTypes;\n      \n      attrs.phrase = 'Execute \"' + attrs.name + '\"';\n\n      // Add phrase for moods\n      if(angular.isArray(paramTypes) && paramTypes.length > 0) {\n        attrs.phrase = attrs.phrase + ' with parameters';\n      }\n    }\n\n    /*\n     * Private method:_createActionTypeParamTypes()\n     */\n    function _createActionTypeParamTypes(resource, attrs) {\n      var actionTypeParamTypes = DS.getAll('actionTypeParamType');\n      var paramTypes = attrs.paramTypes;\n      var actionTypeId = attrs.id;\n\n\n      // ParamTypes\n      angular.forEach(paramTypes, function(paramType) {\n        // Create paramType\n        var paramTypeInstance = DS.createInstance('paramType', paramType);\n        DS.inject('paramType', paramTypeInstance);\n\n        // Filtered actionTypeParamTypes\n        var actionTypeParamTypesFiltered = actionTypeParamTypes.filter(function(actionTypeParamType) {\n          return actionTypeParamType.actionTypeId === actionTypeId && actionTypeParamType.paramTypeId === paramType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(actionTypeParamTypesFiltered) && actionTypeParamTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> paramType)\n          actionTypeParamTypesId = actionTypeParamTypesId + 1;\n          var actionTypeParamTypeInstance = DS.createInstance('actionTypeParamType', {\n            id: actionTypeParamTypesId,\n            actionTypeId: actionTypeId,\n            paramTypeId: paramType.id\n          });\n          DS.inject('actionTypeParamType', actionTypeParamTypeInstance);\n        }\n      });\n    }\n\n\n    /*\n     * Public method: getParams()\n     */\n    function getParams() {\n      /* jshint validthis: true */\n      var self = this;\n      var params = [];\n      var paramTypes = self.paramTypes;\n\n      angular.forEach(paramTypes, function(paramType) {\n        params.push({\n          id: paramType.id,\n          value: paramType.value\n        });\n      });\n\n      return params;\n    }\n\n    /*\n     * Public method: getRuleActionParams(params, actionParamType, eventParamType)\n     */\n    function getRuleActionParams(params, actionParamType, eventParamType) {\n      /* jshint validthis: true */\n      var self = this;\n      var ruleActionParams = [];\n\n      angular.forEach(params, function(param) {\n        if(actionParamType !== undefined && eventParamType !== undefined) {\n          if(param.paramTypeId === actionParamType.id) {\n            ruleActionParams.push({\n              paramTypeId: param.paramTypeId,\n              eventParamName: eventParamType.name,\n              eventTypeId: eventParamType.eventDescriptor.eventTypeId\n            });\n          } else {\n            ruleActionParams.push({\n              paramTypeId: param.paramTypeId,\n              value: param.value\n            });\n          }\n        } else {\n          ruleActionParams.push({\n            paramTypeId: param.paramTypeId,\n            value: param.value\n          });\n        }\n      });\n\n      return ruleActionParams;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging', [\n      'guh.logging.hooks'\n    ])\n    .config(config);\n\n  config.$inject = ['$provide'];\n\n  function config($provide) {\n    // Exceptions\n    // $provide.decorator('$exceptionHandler', ['$injector', '$delegate', 'Logging', function($injector, $delegate, Logging) {\n    //   if(!Logging.angularServiceEnhanced.$exceptionHandler) {\n    //     return $delegate;\n    //   }\n\n    //   return function(exception, cause) {\n    //     $delegate(exception, cause);\n    //   }\n    // }]);\n\n    // Logs\n    $provide.decorator('$log', ['$injector', '$delegate', 'guhLogging', function($injector, $delegate, guhLogging) {\n      var decorator = {\n        log: log,\n        info: info,\n        warn: warn,\n        error: error\n      };\n\n      return decorator;\n\n\n      function _applyCallbacks(logType, args) {\n        var logTypeData = guhLogging.getLogType(logType);\n\n        // Pre callbacks\n        angular.forEach(logTypeData.preCallbacks, function(preCallbackProvider) {\n          var preCallback = $injector.get(preCallbackProvider);\n          preCallback.call(preCallback, {\n            type: logType,\n            args: args\n          });\n        });\n\n        // Console\n        if(guhLogging.isEnhanced(logType)) {\n          $delegate[logType].apply($delegate, args);\n          guhLogging[logType].apply(null, args);\n        } else {\n          $delegate[logType].apply($delegate, args);\n        }\n\n        // Post callbacks\n        angular.forEach(logTypeData.postCallbacks, function(postCallbackProvider) {\n          var postCallback = $injector.get(postCallbackProvider);\n          postCallback.call(postCallback, {\n            type: logType,\n            args: args\n          });\n        });\n      }\n\n      function log() {\n        var args = arguments;\n        _applyCallbacks('log', args);\n      }\n\n      function info() {\n        var args = arguments;\n        _applyCallbacks('info', args);\n      }\n\n      function warn() {\n        var args = arguments;\n        _applyCallbacks('warn', args);\n      }\n\n      function error() {\n        var args = arguments;\n        _applyCallbacks('error', args);\n      }\n    }]);\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging')\n    .provider('guhLogging', Logging);\n\n  Logging.$inject = ['$injector'];\n\n  function Logging($injector) {\n    var _logTypes = {\n      log: {},\n      info: {},\n      warn: {},\n      error: {}\n    };\n\n    var _hooks = {\n      http: 'guhLoggingHttpHook',\n      broadcast: 'guhLoggingBroadcastHook',\n      websocket: null\n    };\n\n    var provider = {\n      $get: $get,\n      enhance: enhance,\n      before: before,\n      after: after,\n      decorate: decorate\n    };\n\n    return provider;\n\n\n    // function _getArrayFromString(string) {\n    //   if(!angular.isString(string)) {\n    //     return;\n    //   }\n    // }\n\n    function _addHooks(prePost, logTypes, hooks) {\n      try {\n        if(angular.isUndefined(logTypes) || logTypes === null || !angular.isString(logTypes)) {\n          throw 'Wrong argument type. The argument \"logTypes\" should be a comma seperated String.';\n        }\n        if(angular.isDefined(hooks) && hooks !== null && !angular.isString(hooks)) {\n          throw 'Wrong argument type. The argument \"hooks\" should be a comma seperated String.';\n        }\n      } catch(error) {\n        return error;\n      }\n\n      var logTypesArray = logTypes.replace(/\\s+/g, '').split(',');\n      var hooksArray = hooks.replace(/\\s+/g, '').split(',');\n      var logTypeCallbacks = [];\n\n      // Check hooks\n      var callback;\n      angular.forEach(hooksArray, function(hook) {\n        if(angular.isDefined(_hooks[hook]) && _hooks[hook] !== null) {\n          logTypeCallbacks.push(_hooks[hook]);\n        }\n      });\n\n      // Initialize all log types with preCallbacks = [] / postCallbacks = []\n      angular.forEach(_logTypes, function(_logType) {\n        _logType[prePost + 'Callbacks'] = [];\n      });\n\n      // Set defined callbacks for log types\n      angular.forEach(logTypesArray, function(logType) {\n        if(angular.isDefined(_logTypes[logType])) {\n          _logTypes[logType][prePost + 'Callbacks'] = logTypeCallbacks;\n        }\n      });\n    }\n\n    function _getEnhancedArguments(args) {\n      // console.log('args', args, angular.isObject(args), angular.isArray(args));\n\n      var argsArray = args ? [].slice.call(args) : args;\n\n      // console.log('argsArray', argsArray, argsArray.length, angular.isArray(argsArray), argsArray[0]);\n\n      if(argsArray.length === 1) {\n        return argsArray[0];\n      } else {\n        return args;\n      }\n    }\n\n    function _addTimestamp() {\n\n    }\n\n\n    function $get() {\n      var service = {\n        isEnhanced: isEnhanced,\n        log: log,\n        info: info,\n        warn: warn,\n        error: error,\n        getLogType: getLogType\n      };\n\n      return service;\n\n\n      function isEnhanced(logType) {\n        return (angular.isDefined(_logTypes[logType]) && angular.isDefined(_logTypes[logType].enhanced)) ? _logTypes[logType].enhanced : false;\n      }\n\n      function log() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.log(arguments);\n      }\n\n      function info() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.info(arguments);\n      }\n\n      function warn() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.warn(arguments);\n      }\n\n      function error() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.error(arguments);\n      }\n\n      function getLogType(logType) {\n        return _logTypes[logType];\n      }\n    }\n\n    function enhance(logTypes) {\n      try {\n        if(angular.isDefined(logTypes) && logTypes !== null && !angular.isString(logTypes)) {\n          throw 'Wrong argument type. The argument \"logTypes\" should be a comma seperated String.';\n        }\n      } catch(error) {\n        return error;\n      }\n\n      var logTypesArray = [];\n\n      // Set enhanced\n      if(angular.isString(logTypes)) {\n        logTypesArray = logTypes.replace(/\\s+/g, '').split(',');\n\n        // Initialize all log types with enhanced = false\n        angular.forEach(_logTypes, function(_logType) {\n          _logType.enhanced = false;\n        });\n\n        // Set defined enhanced values for log types\n        angular.forEach(logTypesArray, function(logType) {\n          if(angular.isDefined(_logTypes[logType])) {\n            _logTypes[logType].enhanced = true;\n          }\n        });\n      } else {\n        // If logTypes is undefined or null\n        // Initialize all log types with enhanced = true\n        angular.forEach(_logTypes, function(_logType) {\n          _logType.enhanced = true;\n        });\n      }\n    }\n\n    function before(logTypes, hooks) {\n      _addHooks('pre', logTypes, hooks);\n    }\n\n    function after(logTypes, hooks) {\n      _addHooks('post', logTypes, hooks);\n    }\n\n    function decorate(message) {\n\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.utils', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n  // module.exports = angular.module('guh.utils');\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n\n  angular\n    .module('guh.utils')\n    .factory('LocalForage', LocalForage);\n\n\n  LocalForage.$inject = ['$log'];\n\n  function LocalForage($log) {\n\n    // jshint unused:false \n    var LocalForage = {\n      localForageAdapter: new DSLocalForageAdapter(),\n      localForageStore: new JSData.DS()\n    };\n\n    return LocalForage;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.utils')\n    .factory('File', FileFactory);\n\n  FileFactory.$inject = ['$log', '$templateCache'];\n\n  function FileFactory($log, $templateCache) {\n    \n    var File = {\n      checkFile: checkFile\n    };\n\n    return File;\n\n\n    /*\n     * Public method: checkFile(path, file)\n     */\n    function checkFile(path, file) {\n      // if(app.environment === 'production') {\n        // Production: One $templateCache entry per template\n        var cacheObject = $templateCache.get(path + file);\n\n        if(cacheObject !== undefined) {\n          return true;\n        } else {\n          return false;\n        }\n      /*} else if(app.environment === 'development') {\n        // Development: One HTML file per template\n        var request = new XMLHttpRequest();\n\n        request.open('HEAD', path + file, false);\n        request.send();\n\n        if(request.status === 200) {\n          return true;\n        } else {\n          return false;\n        }\n      }*/\n    }\n  }\n\n}());\n"],"sourceRoot":"/source/"}