{"version":3,"sources":["logging/hooks/logging-hooks-module.js","logging/hooks/logging-http-hook-provider.js","logging/hooks/logging-broadcast-hook-provider.js","vendor/vendor-module.js","vendor/lodash-vendor-service.js","vendor/localforage-vendor-service.js","models/models-module.js","models/vendor-model-service.js","models/state-type-model-service.js","models/state-model-service.js","models/settings-model-service.js","models/server-info-model-service.js","models/rule-model-service.js","models/plugin-model-service.js","models/param-type-model-service.js","models/models-helper.js","models/event-type-model-service.js","models/device-model-service.js","models/device-class-state-type-model-service.js","models/device-class-model-service.js","models/device-class-event-type-service.js","models/device-class-action-type-model-service.js","models/connection-model-service.js","models/action-type-model-service.js","utils/utils-module.js","utils/local-forage-service.js","utils/file-utils-service.js","logging/logging-module.js","logging/logging-provider.js","api/api-module.js","api/websocket-api-service.js"],"names":["config","angular","module","$inject","guhLoggingHttpHook","_checkParameter","parameterName","parameter","isDefined","isString","error","_setServerAddress","locationServer","locationProtocol","locationHost","locationPort","$get","$http","logObject","post","data","then","response","console","log","payload","setProtocol","protocol","setHostname","hostname","setPort","port","getServer","location","provider","guhLoggingBroadcastHook","$rootScope","type","argsArray","args","slice","call","isArray","length","$broadcast","context","lodashService","$log","$window","_","factory","localforageService","localforage","DSProvider","defaults","debug","DSVendorFactory","$q","DS","websocketService","load","send","method","DSVendor","inject","vendors","getAll","defineResource","endpoint","idAttribute","name","relations","hasMany","deviceClass","localField","foreignKey","computed","methods","extend","run","DSStateTypeFactory","_addUiData","resource","attrs","regExp","searchUnit","replace","phrase","test","DSStateType","deviceClassStateType","afterInject","arrayOfAttrs","forEach","DSStateFactory","deviceId","params","states","values","map","state","DSState","belongsTo","device","localKey","parent","hasOne","stateType","compoundId","stateTypeId","value","DSSettingsFactory","LocalForage","localForageStore","registerAdapter","localForageAdapter","default","DSSettings","serverInfo","connection","DSServerInfoFactory","ServerInfo","settings","DSServerInfo","DSRuleFactory","_loadDetails","ruleDescription","ruleId","id","all","ruleDescriptions","DSRule","rule","rules","add","executeActions","self","this","executeExitActions","remove","DSPluginFactory","DSPlugin","plugins","DSParamTypeFactory","DSParamType","modelsHelper","File","app","checkTemplateUrl","templateUrl","pathElements","split","file","pop","path","join","undefined","fileExists","when","checkFile","setBasePath","basePath","apiUrl","DSEventTypeFactory","paramTypes","getParamDescriptor","paramType","operator","paramDescriptor","DSEventType","DSDeviceFactory","_createStates","index","stateInstance","createInstance","isUndefined","get","_removeStates","eject","DSDevice","devices","getDescription","delimiter","vendorName","vendor","deviceClassName","pair","deviceClassId","deviceDescriptorId","deviceParams","confirmPairing","pairingTransactionId","secret","edit","deviceData","deviceParamTypes","deviceParamType","deviceParam","push","update","executeAction","actionType","jsonRpcParams","actionTypeId","key","getEventDescriptor","eventType","paramDescriptors","eventDescriptor","eventTypeId","getStateDescriptor","stateDescriptor","getAction","action","ruleActionParams","getRuleActionParams","afterEject","DSDeviceClassStateTypeFactory","DSDeviceClassStateType","DSDeviceClassFactory","DSDeviceClassActionType","DSDeviceClassEventType","DSDeviceClass","deviceClasses","_getInputPath","filename","_addUiTemplate","templateName","toLowerCase","_createDeviceClassActionsTypes","deviceClassActionTypes","deviceClassEventTypes","deviceClassStateTypes","actionTypes","eventTypes","stateTypes","actionTypeInstance","deviceClassActionTypesFiltered","filter","deviceClassActionType","deviceClassActionTypesId","deviceClassActionTypeInstance","eventTypeInstance","deviceClassEventTypesFiltered","deviceClassEventType","deviceClassEventTypesId","deviceClassEventTypeInstance","stateTypeInstance","deviceClassStateTypesFiltered","deviceClassStateTypesId","deviceClassStateTypeInstance","_mapStates","stateIds","pluck","contains","hasState","discover","discoveryParams","getCreateMethod","createMethodData","createMethods","indexOf","title","template","getSetupMethod","setupMethodData","setupMethod","getAllActionTypes","getAllEventTypes","getAllStateTypes","DSDeviceClassEventTypeFactory","DSDeviceClassActionTypeFactory","DSConnectionFactory","Connection","DSConnection","DSActionTypeFactory","getParams","actionParamType","eventParamType","param","eventParamName","DSActionType","DSLocalForageAdapter","JSData","FileFactory","$templateCache","cacheObject","$provide","decorator","$injector","$delegate","guhLogging","_applyCallbacks","logType","logTypeData","getLogType","preCallbacks","preCallbackProvider","preCallback","isEnhanced","apply","postCallbacks","postCallbackProvider","postCallback","arguments","info","warn","Logging","_addHooks","prePost","logTypes","hooks","logTypesArray","hooksArray","logTypeCallbacks","hook","_hooks","_logTypes","_logType","enhanced","service","enhance","before","after","decorate","message","http","broadcast","websocket","_getRequestId","currentRequestId","close","ws","connect","url","WebSocket","onopen","event","$apply","onclose","onerror","onmessage","fromJson","notification","injectedItem","is","ejectedItem","status","deviceError","callbacks","callback","reject","loggingError","ruleError","resolve","reconnect","request","defer","requestId","time","Date","toJson","promise"],"mappings":"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","file":"guh-libjs.min.js","sourcesContent":["/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks')\n    .provider('guhLoggingHttpHook', guhLoggingHttpHook);\n\n  function guhLoggingHttpHook() {\n    // Variables\n    var locationProtocol = location.protocol;\n    var locationHost = location.hostname;\n    var locationPort = location.port;\n    var locationServer = locationProtocol + '//' + locationHost + ':' + locationPort;\n\n\n    var provider = {\n      // Provider methods (needed)\n      $get: ['$http', $get],\n\n      // Other methods\n      getServer: getServer,\n      setProtocol: setProtocol,\n      setHostname: setHostname,\n      setPort: setPort\n    };\n\n    return provider;\n\n\n    function _checkParameter(parameterName, parameter) {\n      try {\n        if(!angular.isDefined(parameter) || parameter === null) {\n          throw 'The parameter ' + parameterName + ' has to be defined.';\n        } else if(!angular.isString(parameter)) {\n          throw 'The value of ' + parameterName + ' has to be a string.';\n        }\n      } catch(error) {\n        return;\n      }\n    }\n\n    function _setServerAddress() {\n      locationServer = locationProtocol + '//' + locationHost + ':' + locationPort;\n    }\n\n\n    function $get($http) {\n      return function(logObject) {\n        $http\n          .post(locationServer, {\n            data: logObject\n          })\n          .then(function(response) {\n            console.log('Data successfully sent.', {\n              payload: logObject,\n              response: response\n            });\n          })\n          .catch(function(error) {\n            console.log('Data not sent.', {\n              payload: logObject,\n              error: error\n            })\n          });\n      }\n\n      // console.log('$get', $http);\n\n      // var service = {\n      //   // Variables\n      //   protocol: locationProtocol,\n      //   host: locationHost,\n      //   port: locationPort,\n      //   server: locationServer,\n\n      //   // Methods\n      //   addToQueue: addToQueue\n      // };\n\n      // return service;\n\n\n      // function addToQueue($http) {\n      //   console.log('addToQueue', $http);\n      // }\n    }\n\n    function setProtocol(protocol) {\n      _checkParameter('protocol', protocol);\n      locationProtocol = protocol;\n      _setServerAddress();\n    }\n\n    function setHostname(hostname) {\n      _checkParameter('hostname', hostname);\n      locationHost = hostname;\n      _setServerAddress();\n    }\n\n    function setPort(port) {\n      _checkParameter('port', port);\n      locationPort = port;\n      _setServerAddress();\n    }\n\n    function getServer() {\n      return locationServer;\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging.hooks')\n    .provider('guhLoggingBroadcastHook', guhLoggingBroadcastHook);\n\n  function guhLoggingBroadcastHook() {\n\n    var provider = {\n      // Provider methods (needed)\n      $get: ['$rootScope', $get]\n    };\n\n    return provider;\n\n\n    function $get($rootScope) {\n      return function(logObject) {\n        var type = logObject.type ? logObject.type : null;\n        var argsArray = logObject.args ? [].slice.call(logObject.args) : null;\n\n        if(angular.isArray(argsArray)) {\n          switch(argsArray.length) {\n            case 1:\n              if(!angular.isString(argsArray[0])) {\n                $rootScope.$broadcast('notification', {\n                  type: type,\n                  args: argsArray[0]\n                });\n              }\n              break;\n            case 2:\n              $rootScope.$broadcast('notification', {\n                type: type,\n                context: argsArray[0],\n                args: argsArray[1]\n              });\n              break;\n            default:\n              console.log('Wrong number of arguments.', logObject.type, logObject.args, argsArray.length);\n          }\n        }\n      }\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor')\n    .factory('_', lodashService);\n\n  lodashService.$inject = ['$log', '$window'];\n\n  function lodashService($log, $window) {\n\n    if(!$window._) {\n      $log.error('guh.vendor.lodashService:factory', '_ is not defined on window object');\n    }\n\n    return $window._;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.vendor')\n    .factory('localforage', localforageService);\n\n  localforageService.$inject = ['$log', '$window'];\n\n  function localforageService($log, $window) {\n\n    if(!$window.localforage) {\n      $log.error('guh.vendor.localforageService:factory', 'localforage is not defined on window object');\n    }\n\n    return $window.localforage;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models', [\n      // Datastore\n      'js-data'\n    ])\n    .config(config);\n\n  config.$inject = ['DSProvider'];\n\n  function config(DSProvider) {\n    DSProvider\n      .defaults\n      .debug = false;\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSVendor', DSVendorFactory)\n    .run(function(DSVendor) {});\n\n  DSVendorFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSVendorFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSVendor = DS.defineResource({\n\n      // API configuration\n      endpoint: 'vendors',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'vendor',\n      relations: {\n        hasMany: {\n          deviceClass: {\n            localField: 'deviceClasses',\n            foreignKey: 'vendorId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSVendor, {\n      load: load\n    });\n\n    return DSVendor;\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetSupportedVendors'\n        })\n        .then(function(data) {\n          DSVendor.inject(data.vendors);\n          return DSVendor.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSStateType', DSStateTypeFactory)\n    .run(function(DSStateType) {});\n\n  DSStateTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSStateTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSStateType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'statetypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'stateType',\n      relations: {\n        hasMany: {\n          deviceClassStateType: {\n            localField: 'deviceClassStateTypes',\n            foreignKey: 'stateTypeId'\n          },\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {},\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSStateType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var regExp = /\\s\\[([^)]+)\\]/;                 // Value inside brackets []\n      var searchUnit = name.replace(regExp, '');    // Get value inside brackets\n      var phrase = attrs.name;\n\n      // If name contains the unit in brackets []\n      if(regExp.test(name)) {\n        phrase = searchUnit;\n      }\n\n      // phrase\n      attrs.phrase = 'When value of ' + phrase;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSState', DSStateFactory)\n    .run(function(DSState) {});\n\n  DSStateFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSStateFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSState = DS.defineResource({\n\n      // API configuration\n      endpoint: 'states',\n\n      // Model configuration\n      // idAttribute: 'stateTypeId',\n      idAttribute: 'compoundId',\n      name: 'state',\n      relations: {\n        belongsTo: {\n          device: {\n            localField: 'device',\n            localKey: 'deviceId',\n            parent: true\n          }\n        },\n        hasOne: {\n          stateType: {\n            localField: 'stateType',\n            localKey: 'stateTypeId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {\n        compoundId: ['deviceId', 'stateTypeId', 'value', function (deviceId, stateTypeId, value) {\n          return '' + deviceId + '_' + stateTypeId;\n        }]\n      },\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSState, {\n      load: load\n    });\n\n    return DSState;\n\n\n    function load(deviceId) {\n      return websocketService\n        .send({\n          method: 'Devices.GetStateValues',\n          params: {\n            deviceId: deviceId\n          }\n        })\n        .then(function(data) {\n          var states = data.values.map(function(state) {\n            state.deviceId = deviceId;\n            return state;\n          });\n          DSState.inject(states);\n          return DSState.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSSettings', DSSettingsFactory)\n    .run(function(DSSettings) {});\n\n\n  DSSettingsFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSSettingsFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var DSSettings = LocalForage.localForageStore.defineResource({\n      name: 'settings',\n      relations: {\n        hasOne: {\n          serverInfo: {\n            localField: 'serverInfo',\n            foreignKey: 'settingsId'\n          }\n        },\n        hasMany: {\n          connection: {\n            localField: 'connections',\n            foreignKey: 'settingsId'\n          }\n        }\n      }\n    });\n\n    return DSSettings;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSServerInfo', DSServerInfoFactory)\n    .run(function(DSServerInfo) {});\n\n\n  DSServerInfoFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSServerInfoFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var ServerInfo = LocalForage.localForageStore.defineResource({\n      name: 'serverInfo',\n      relations: {\n        belongsTo: {\n          settings: {\n            localField: 'settings',\n            foreignKey: 'settingsId',\n            parent: true\n          }\n        }\n      }\n    });\n\n    return ServerInfo;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSRule', DSRuleFactory)\n    .run(function(DSRule) {});\n\n  DSRuleFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSRuleFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSRule = DS.defineResource({\n\n      // API configuration\n      endpoint: 'rules',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'rule',\n      relations: {},\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        // API\n        executeActions: executeActions,\n        executeExitActions: executeExitActions,\n        remove: remove\n      }\n\n    });\n\n    angular.extend(DSRule, {\n      load: load,\n      add: add\n    });\n\n    return DSRule;\n\n\n    function _loadDetails(ruleDescription) {\n      return websocketService\n        .send({\n          method: 'Rules.GetRuleDetails',\n          params: {\n            ruleId: ruleDescription.id\n          }\n        });\n    }\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Rules.GetRules'\n        })\n        .then(function(data) {\n          return $q.all(data.ruleDescriptions.map(function(ruleDescription) {\n            return _loadDetails(ruleDescription)\n              .then(function(data) {\n                DSRule.inject(data.rule);\n                return data.rule;\n              });\n          }));\n        })\n        .then(function(rules) {\n          return DSRule.getAll();\n        });\n    }\n\n    function add(rule) {\n      return websocketService.send({\n        method: 'Rules.AddRule',\n        params: rule\n      });\n    }\n\n    /*\n     * Public method: executeActions()\n     */\n    function executeActions() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.ExecuteActions',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n    /*\n     * Public method: executeExitActions()\n     */\n    function executeExitActions() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.ExecuteExitActions',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n    /*\n     * Public method: remove()\n     */\n    function remove() {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Rules.RemoveRule',\n        params: {\n          ruleId: self.id\n        }\n      });\n    }\n\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSPlugin', DSPluginFactory)\n    .run(function(DSPlugin) {});\n\n  DSPluginFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSPluginFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSPlugin = DS.defineResource({\n\n      // API configuration\n      endpoint: 'plugins',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'plugin',\n      relations: {},\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    angular.extend(DSPlugin, {\n      load: load\n    });\n\n    return DSPlugin;\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetPlugins'\n        })\n        .then(function(data) {\n          DSPlugin.inject(data.plugins);\n          return DSPlugin.getAll();\n        });\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSParamType', DSParamTypeFactory)\n    .run(function(DSParamType) {});\n\n  DSParamTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSParamTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSParamType = DS.defineResource({\n\n      // Model configuration\n      name: 'paramType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {}\n\n    });\n\n    return DSParamType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('modelsHelper', modelsHelper);\n\n  modelsHelper.$inject = ['$log', '$q', 'DS', 'File', 'app'];\n\n  function modelsHelper($log, $q, DS, File, app) {\n\n    var modelsHelper = {\n      checkTemplateUrl: checkTemplateUrl,\n      setBasePath: setBasePath\n    };\n\n    return modelsHelper;\n\n\n    /*\n     * Private method: _getValue(guhType)\n     */\n    function _getValue(guhType) {\n      var type = (guhType.type === undefined) ? null : guhType.type;\n      var value;\n\n      switch(type) {\n        case 'Bool':\n          value = guhType.defaultValue || false;\n          break;\n        case 'Int':\n        case 'Uint':\n          value = guhType.defaultValue || 0;\n          break;\n        case 'Double':\n          value = guhType.defaultValue || 0.0;\n          break;\n        case 'Color':\n          value = guhType.defaultValue || '0,0,0';\n          break;\n        case 'String':\n          value = guhType.defaultValue || '';\n          break;\n        default:\n          value = guhType.defaultValue || undefined;\n          break;\n      }\n\n      return value;\n    }\n    \n\n    /*\n     * Public method: checkTemplateUrl(templateUrl)\n     */\n    function checkTemplateUrl(templateUrl) {\n      var pathElements = templateUrl.split('/');\n      var file = pathElements.pop();\n      var path = pathElements.join('/') + '/';\n\n      if(templateUrl !== undefined && templateUrl !== '') {\n        var fileExists = $q.when(File.checkFile(path, file))\n          .then(function(fileExists) {\n            if(fileExists) {\n              // $log.log('Template available', templateUrl);\n              return templateUrl;\n            } else {\n              // $log.warn('Template NOT available', templateUrl);\n              return path + 'template-not-available.html'; \n            }\n          });\n\n        return fileExists;\n      } else {\n        return path + 'template-not-defined.html';\n      }\n    }\n\n    /*\n     * Public method: setBasePath()\n     */\n    function setBasePath() {      \n      DS\n        .defaults\n        .basePath = app.apiUrl;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSEventType', DSEventTypeFactory)\n    .run(function(DSEventType) {});\n\n  DSEventTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSEventTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSEventType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'eventtypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'eventType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId',\n            parent: true\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        getParamDescriptor: getParamDescriptor\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSEventType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var paramTypes = attrs.paramTypes;\n      var phrase = 'When ' + attrs.name;\n\n      // Add phrase for moods\n      if(angular.isArray(paramTypes) && paramTypes.length === 0) {\n        attrs.phrase = phrase + ' is detected';\n      } else {\n        attrs.phrase = phrase + ' is detected and parameters are';\n      }\n    }\n\n\n    /*\n     * Public method: getParamDescriptors(paramType, value, operator)\n     */\n    function getParamDescriptor(paramType, value, operator) {\n      var paramDescriptor = {};\n\n      paramDescriptor = {\n        name: paramType.name,\n        operator: operator,\n        value: value\n      };\n\n      return paramDescriptor;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDevice', DSDeviceFactory)\n    .run(function(DSDevice) {});\n\n  DSDeviceFactory.$inject = ['$log', '$q', 'DS', 'websocketService'];\n\n  function DSDeviceFactory($log, $q, DS, websocketService) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDevice = DS.defineResource({\n\n      // API configuration\n      endpoint: 'devices',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'device',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          }\n        }\n\n        // Not working (error: \"Doh! You just changed the primary key of an object!\") because states are injected before the state primary keys are generated\n        // hasMany: {\n        //   state: {\n        //     localField: 'states',\n        //     foreignKey: 'deviceId'\n        //   }\n        // }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        executeAction: executeAction,\n        remove: remove,\n        getDescription: getDescription,\n        getEventDescriptor: getEventDescriptor,\n        getStateDescriptor: getStateDescriptor,\n        getAction: getAction\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _createStates(resource, attrs);\n          });\n        } else {\n          _createStates(resource, attrs);\n        }\n      },\n\n      afterEject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _removeStates(resource, attrs);\n          });\n        } else {\n          _removeStates(resource, attrs);\n        }\n      }\n\n    });\n\n    angular.extend(DSDevice, {\n      load: load,\n      add: add,\n      edit: edit,\n      pair: pair,\n      confirmPairing: confirmPairing\n    });\n\n    return DSDevice;\n    \n\n    /*\n     * Private method: _createStates(resource, attrs);\n     */\n    function _createStates(resource, attrs) {\n      var deviceId = attrs.id;\n      var states = attrs.states;\n\n      angular.forEach(states, function(state, index) {\n        state.deviceId = deviceId;\n\n        var stateInstance = DS.createInstance('state', state);\n        DS.inject('state', stateInstance);\n\n        if(angular.isUndefined(attrs.states)) {\n          attrs.states = [];\n        }\n        attrs.states[index] = DS.get('state', '' + deviceId + '_' + state.stateTypeId);\n      });\n    }\n\n    /*\n     * Private method: _removeStates(resource, attrs)\n     */\n    function _removeStates(resource, attrs) {\n      var deviceId = attrs.id;\n      var states = attrs.states;\n\n      angular.forEach(states, function(state, index) {\n        var ejectedItem = DS.eject('state', '' + deviceId + '_' + state.stateTypeId);\n      });\n    }\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetConfiguredDevices'\n        })\n        .then(function(data) {\n          DSDevice.inject(data.devices);\n          return DSDevice.getAll();\n        });\n    }\n\n    /*\n     * Public method: getDescription(delimiter)\n     */\n    function getDescription(delimiter) {\n      /* jshint validthis: true */\n      var self = this;\n      var vendorName = self.deviceClass.vendor.name;\n      var deviceClassName = self.deviceClass.name || '';\n\n      delimiter = delimiter || '-';\n\n      return (vendorName === deviceClassName) ? deviceClassName : (vendorName + delimiter + deviceClassName);\n    }\n\n    /*\n     * Public method: pair(deviceClassId, deviceDescriptorId, deviceParams, name)\n     */\n    function pair(deviceClassId, deviceDescriptorId, deviceParams, name) {\n      var params = {};\n\n      params.deviceClassId = deviceClassId || '';\n\n      if(angular.isDefined(deviceDescriptorId) && deviceDescriptorId !== '') {\n        params.deviceDescriptorId = deviceDescriptorId;\n      } else {\n        params.deviceParams = deviceParams || [];\n      }\n\n      if(angular.isDefined(name)) {\n        params.name = name;\n      }\n\n      return websocketService.send({\n        method: 'Devices.PairDevice',\n        params: params\n      });\n    }\n\n    /*\n     * Public method: confirmPairing(pairingTransactionId, secret)\n     */\n    function confirmPairing(pairingTransactionId, secret) {\n      var params = {};\n      \n      params.pairingTransactionId = pairingTransactionId;\n\n      if(secret) {\n        params.secret = secret;\n      }\n\n      return websocketService.send({\n        method: 'Devices.ConfirmPairing',\n        params: params\n      }); \n    }\n\n    /*\n     * Public method: add(deviceClassId, deviceDescriptorId, deviceParams, name)\n     */\n    function add(deviceClassId, deviceDescriptorId, deviceParams, name) {\n      var params = {};\n\n      // name\n      if(angular.isDefined(name) && name !== '') {\n        params.name = name;\n      }\n\n      // deviceClassId\n      if(angular.isDefined(deviceClassId) && deviceClassId  !== '') {\n        params.deviceClassId = deviceClassId;\n      }\n\n      // deviceDescriptorId or deviceParams\n      if(angular.isDefined(deviceDescriptorId) && deviceDescriptorId !== '') {\n        params.deviceDescriptorId = deviceDescriptorId;\n      } else if(angular.isDefined(deviceParams) && deviceParams !== []) {\n        params.deviceParams = deviceParams;\n      }\n\n      // Device gets inserted when notification \"Devices.DeviceAdded\" was received\n      return websocketService.send({\n        method: 'Devices.AddConfiguredDevice',\n        params: params\n      });\n    }\n\n    /*\n     * Public method: edit(deviceId, deviceData)\n     */\n    function edit(deviceId, deviceData) {\n      var device = {};\n      deviceData = deviceData || {};\n\n      device.deviceDescriptorId = deviceData.id || '';\n\n      device.deviceParams = [];\n      angular.forEach(deviceData.deviceParamTypes, function(deviceParamType) {\n        var deviceParam = {};\n\n        deviceParam.name = deviceParamType.name;\n        deviceParam.value = deviceParamType.value;\n\n        device.deviceParams.push(deviceParam);\n      });\n\n      return DSDevice.update(deviceId, {device: device});\n    }\n\n    /*\n     * Public method: executeAction()\n     */\n    function executeAction(actionType, params) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        actionTypeId: actionType.id,\n        deviceId: self.id\n      };\n\n      if(angular.isDefined(params) && params !== {}) {\n        jsonRpcParams.params = params;\n      }\n\n      return websocketService.send({\n        method: 'Actions.ExecuteAction',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: remove()\n     */\n    function remove(params) {\n      /* jshint validthis: true */\n      var self = this;\n      var jsonRpcParams = {\n        deviceId: self.id\n      };\n\n      if(angular.isDefined(params) && params !== {}) {\n        angular.forEach(params, function(value, key) {\n          jsonRpcParams[key] = value;\n        });\n      }\n\n      return websocketService.send({\n        method: 'Devices.RemoveConfiguredDevice',\n        params: jsonRpcParams\n      });\n    }\n\n    /*\n     * Public method: getEventDescriptor(eventType, paramDescriptors)\n     */\n    function getEventDescriptor(eventType, paramDescriptors) {\n      /* jshint validthis: true */\n      var self = this;\n      var eventDescriptor = {};\n\n      eventDescriptor.deviceId = self.id;\n      eventDescriptor.eventTypeId = eventType.id;\n\n      if(angular.isDefined(paramDescriptors) && paramDescriptors.length > 0) {\n        eventDescriptor.paramDescriptors = paramDescriptors;\n      }\n\n      return eventDescriptor;     \n    }\n\n    /*\n     * Public method: getStateDescriptor(stateType, paramDescriptor)\n     */\n    function getStateDescriptor(stateType, paramDescriptor) {\n      /* jshint validthis: true */\n      var self = this;\n      var stateDescriptor = {};\n\n      stateDescriptor.deviceId = self.id;\n      stateDescriptor.operator = paramDescriptor.operator;\n      stateDescriptor.stateTypeId = stateType.id;\n      stateDescriptor.value = paramDescriptor.value;\n      \n      return stateDescriptor;\n    }\n\n\n    /*\n     * Public method: getAction(actionType, params)\n     */\n    function getAction(actionType, params) {\n      /* jshint validthis: true */\n      var self = this;\n      var action = {};\n      var ruleActionParams = [];\n\n      ruleActionParams = actionType.getRuleActionParams(params);\n      if(ruleActionParams.length > 0) {\n        action.ruleActionParams = ruleActionParams;\n      }\n\n      action.actionTypeId = actionType.id;\n      action.deviceId = self.id;\n\n      return action;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassStateType', DSDeviceClassStateTypeFactory)\n    .run(function(DSDeviceClassStateType) {});\n\n  DSDeviceClassStateTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassStateTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassStateType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassStateType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          stateType: {\n            localField: 'stateType',\n            localKey: 'stateTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassStateType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClass', DSDeviceClassFactory)\n    .run(function(DSDeviceClass) {});\n\n  DSDeviceClassFactory.$inject = ['$log', '$q', 'DS', '_', 'websocketService', 'modelsHelper', 'DSDeviceClassActionType', 'DSDeviceClassEventType', 'DSDeviceClassStateType'];\n\n  function DSDeviceClassFactory($log, $q, DS, _, websocketService, modelsHelper, DSDeviceClassActionType, DSDeviceClassEventType, DSDeviceClassStateType) {\n    \n    var staticMethods = {};\n    var deviceClassActionTypesId = 0;\n    var deviceClassEventTypesId = 0;\n    var deviceClassStateTypesId = 0;\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClass = DS.defineResource({\n\n      // API configuration\n      endpoint: 'deviceclasses',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'deviceClass',\n      relations: {\n        belongsTo: {\n          vendor: {\n            localField: 'vendor',\n            localKey: 'vendorId',\n            // parent: true\n          }\n        },\n        hasMany: {\n          deviceClassActionType: {\n            localField: 'deviceClassActionTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassEventType: {\n            localField: 'deviceClassEventTypes',\n            foreignKey: 'deviceClassId'\n          },\n          deviceClassStateType: {\n            localField: 'deviceClassStateTypes',\n            foreignKey: 'deviceClassId'\n          }\n        }\n      },\n\n      // Computed properties\n      computed: {\n        templateUrl: ['name', _addUiTemplate]\n      },\n\n      // Instance methods\n      methods: {\n        discover: discover,\n        getCreateMethod: getCreateMethod,\n        getSetupMethod: getSetupMethod\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _mapStates(resource, attrs);\n            _createDeviceClassActionsTypes(resource, attrs);\n          });\n        } else {\n          _mapStates(resource, attrs);\n          _createDeviceClassActionsTypes(resource, attrs);\n        }\n      }\n\n    });\n\n    DSDeviceClass.getAllActionTypes = function(deviceClassId) {\n      var deviceClassActionTypes = DSDeviceClassActionType.getAll();\n      var deviceClassActionTypesFiltered = deviceClassActionTypes.filter(function(deviceClassActionType) {\n        return deviceClassActionType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var actionTypes = [];\n\n      angular.forEach(deviceClassActionTypesFiltered, function(deviceClassActionType) {\n        if(deviceClassActionType.deviceClassId === deviceClassId) {\n          var actionType = DS.get('actionType', deviceClassActionType.actionTypeId);\n          actionTypes.push(actionType);\n        }\n      });\n\n      return actionTypes;\n    };\n\n    DSDeviceClass.getAllEventTypes = function(deviceClassId) {\n      var deviceClassEventTypes = DSDeviceClassEventType.getAll();\n      var deviceClassEventTypesFiltered = deviceClassEventTypes.filter(function(deviceClassEventType) {\n        return deviceClassEventType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var eventTypes = [];\n\n      angular.forEach(deviceClassEventTypesFiltered, function(deviceClassEventType) {\n        if(deviceClassEventType.deviceClassId === deviceClassId) {\n          var eventType = DS.get('eventType', deviceClassEventType.eventTypeId);\n          eventTypes.push(eventType);\n        }\n      });\n\n      return eventTypes;\n    };\n\n    DSDeviceClass.getAllStateTypes = function(deviceClassId) {\n      var deviceClassStateTypes = DSDeviceClassStateType.getAll();\n      var deviceClassStateTypesFiltered = deviceClassStateTypes.filter(function(deviceClassStateType) {\n        return deviceClassStateType.deviceClassId === deviceClassId;\n      });\n      var deviceClass = DS.get('deviceClass', deviceClassId);\n      var stateTypes = [];\n\n      angular.forEach(deviceClassStateTypesFiltered, function(deviceClassStateType) {\n        if(deviceClassStateType.deviceClassId === deviceClassId) {\n          var stateType = DS.get('stateType', deviceClassStateType.stateTypeId);\n          stateTypes.push(stateType);\n        }\n      });\n\n      return stateTypes;\n    };\n\n    angular.extend(DSDeviceClass, {\n      load: load\n    });\n\n    return DSDeviceClass;\n\n\n    function load() {\n      return websocketService\n        .send({\n          method: 'Devices.GetSupportedDevices'\n        })\n        .then(function(data) {\n          DSDeviceClass.inject(data.deviceClasses);\n          return DSDeviceClass.getAll();\n        });\n    }\n\n\n    /*\n     * Private method: _getInputPath(name, filename)\n     */\n    function _getInputPath(name, filename) {\n      return 'app/containers/thing-details/device-class-templates/' + filename + '.html';\n    }\n\n    /*\n     * Private method: _addUiTemplate(name)\n     */\n    function _addUiTemplate(name) {\n      // Example: 'Elro Remote' => 'elro-remote'\n      var templateName = name\n        .toLowerCase()\n        .replace(/\\s/g, '-')\n        .replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '');\n      var templateUrl = _getInputPath(name, 'device-class-' + templateName);\n\n      return modelsHelper.checkTemplateUrl(templateUrl);\n    }\n\n    /*\n     * Private method:_createDeviceClassActionsTypes()\n     */\n    function _createDeviceClassActionsTypes(resource, attrs) {\n      var deviceClassActionTypes = DS.getAll('deviceClassActionType');\n      var deviceClassEventTypes = DS.getAll('deviceClassEventType');\n      var deviceClassStateTypes = DS.getAll('deviceClassStateType');\n      var actionTypes = attrs.actionTypes;\n      var eventTypes = attrs.eventTypes;\n      var stateTypes = attrs.stateTypes;\n      var deviceClassId = attrs.id;\n\n      // ActionTypes\n      angular.forEach(actionTypes, function(actionType) {\n        // Create actionType\n        var actionTypeInstance = DS.createInstance('actionType', actionType);\n        DS.inject('actionType', actionTypeInstance);\n\n        // Filtered deviceClassActionTypes\n        var deviceClassActionTypesFiltered = deviceClassActionTypes.filter(function(deviceClassActionType) {\n          return deviceClassActionType.deviceClassId === deviceClassId && deviceClassActionType.actionTypeId === actionType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassActionTypesFiltered) && deviceClassActionTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> actionType)\n          deviceClassActionTypesId = deviceClassActionTypesId + 1;\n          var deviceClassActionTypeInstance = DS.createInstance('deviceClassActionType', {\n            id: deviceClassActionTypesId,\n            deviceClassId: deviceClassId,\n            actionTypeId: actionType.id\n          });\n          DS.inject('deviceClassActionType', deviceClassActionTypeInstance);\n        }\n      });\n\n      // EventTypes\n      angular.forEach(eventTypes, function(eventType) {\n        // Create eventType\n        var eventTypeInstance = DS.createInstance('eventType', eventType);\n        DS.inject('eventType', eventTypeInstance);\n\n        // Filtered deviceClassEventTypes\n        var deviceClassEventTypesFiltered = deviceClassEventTypes.filter(function(deviceClassEventType) {\n          return deviceClassEventType.deviceClassId === deviceClassId && deviceClassEventType.eventTypeId === eventType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassEventTypesFiltered) && deviceClassEventTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> eventType)\n          deviceClassEventTypesId = deviceClassEventTypesId + 1;\n          var deviceClassEventTypeInstance = DS.createInstance('deviceClassEventType', {\n            id: deviceClassEventTypesId,\n            deviceClassId: deviceClassId,\n            eventTypeId: eventType.id\n          });\n          DS.inject('deviceClassEventType', deviceClassEventTypeInstance);\n        }\n      });\n\n      // StateTypes\n      angular.forEach(stateTypes, function(stateType) {\n        // Create stateType\n        var stateTypeInstance = DS.createInstance('stateType', stateType);\n        DS.inject('stateType', stateTypeInstance);\n\n        // Filtered deviceClassStateTypes\n        var deviceClassStateTypesFiltered = deviceClassStateTypes.filter(function(deviceClassStateType) {\n          return deviceClassStateType.deviceClassId === deviceClassId && deviceClassStateType.stateTypeId === stateType.id;\n        });\n\n        // Only inject if not already there\n        if(angular.isArray(deviceClassStateTypesFiltered) && deviceClassStateTypesFiltered.length === 0) {\n          // Create membership (deviceClass <-> actionType)\n          deviceClassStateTypesId = deviceClassStateTypesId + 1;\n          var deviceClassStateTypeInstance = DS.createInstance('deviceClassStateType', {\n            id: deviceClassStateTypesId,\n            deviceClassId: deviceClassId,\n            stateTypeId: stateType.id\n          });\n          DS.inject('deviceClassStateType', deviceClassStateTypeInstance);\n        }\n      });\n    }\n\n    /*\n     * Private method: _mapStates(resource, attrs)\n     */\n    function _mapStates(resource, attrs) {\n      var actionTypes = attrs.actionTypes;\n      var eventTypes = attrs.eventTypes;\n      var stateTypes = attrs.stateTypes;\n      // var stateIds = libs._.pluck(stateTypes, 'id');\n      var stateIds = _.pluck(stateTypes, 'id');\n\n      // Map actionTypes\n      angular.forEach(actionTypes, function(actionType) {\n        // Check if current actionType belongs to a stateType\n        if(_.contains(stateIds, actionType.id)) {\n          actionType.hasState = true;\n        } else {\n          actionType.hasState = false;\n        }\n      });\n\n      // Map eventTypes\n      angular.forEach(eventTypes, function(eventType) {\n        // Check if current eventType belongs to a stateType\n        if(_.contains(stateIds, eventType.id)) {\n          eventType.hasState = true;\n        } else {\n          eventType.hasState = false;\n        }\n      });\n    }\n\n\n    /*\n     * Public method: discover(discoveryParams)\n     */\n    function discover(discoveryParams) {\n      /* jshint validthis: true */\n      var self = this;\n\n      return websocketService.send({\n        method: 'Devices.GetDiscoveredDevices',\n        params: {\n          deviceClassId: self.id,\n          discoveryParams: discoveryParams\n        }\n      });\n    }\n\n    /*\n     * Public method: getCreateMethod()\n     */\n    function getCreateMethod() {\n      /* jshint validthis: true */\n      var self = this;\n      var basePath = 'app/components/create-thing/templates/';\n      var createMethodData = null;\n\n      if(self.createMethods.indexOf('CreateMethodDiscovery') > -1) {\n        createMethodData = {\n          title: 'Discovery',\n          template: basePath + 'create-thing-discovery.html'\n        };\n      } else if(self.createMethods.indexOf('CreateMethodUser') > -1) {\n        createMethodData = {\n          title: 'User',\n          template: basePath + 'create-thing-user.html'\n        };\n      } else if(self.createMethods.indexOf('CreateMethodAuto') > -1) {\n        createMethodData = {\n          title: 'Auto',\n          template: null\n        };\n      } else {\n        $log.error('CreateMethod not implemented.');\n      }\n\n      return createMethodData;\n    }\n\n    /*\n     * Public method: getSetupMethod()\n     */\n    function getSetupMethod() {\n      /* jshint validthis: true */\n      var self = this;\n      var basePath = 'app/components/setup-thing/templates/';\n      var setupMethodData = {};\n\n      switch(self.setupMethod) {\n        case 'SetupMethodJustAdd':\n          setupMethodData = null;\n          break;\n        case 'SetupMethodDisplayPin':\n          setupMethodData = {\n            title: 'Display Pin',\n            template: basePath + 'setup-thing-display-pin.html'\n          };\n          break;\n        case 'SetupMethodEnterPin':\n          setupMethodData = {\n            title: 'Enter Pin',\n            template: basePath + 'setup-thing-enter-pin.html'\n          };\n          break;\n        case 'SetupMethodPushButton':\n          setupMethodData = {\n            title: 'Push Button',\n            template: basePath + 'setup-thing-push-button.html'\n          };\n          break;\n        default:\n          $log.error('SetupMethod not implemented.');\n          break;\n      }\n\n      return setupMethodData;\n    }\n\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassEventType', DSDeviceClassEventTypeFactory)\n    .run(function(DSDeviceClassEventType) {});\n\n  DSDeviceClassEventTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassEventTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassEventType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassEventType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          eventType: {\n            localField: 'eventType',\n            localKey: 'eventTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassEventType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSDeviceClassActionType', DSDeviceClassActionTypeFactory)\n    .run(function(DSDeviceClassActionType) {});\n\n  DSDeviceClassActionTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSDeviceClassActionTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSDeviceClassActionType = DS.defineResource({\n\n      // Model configuration\n      name: 'deviceClassActionType',\n      relations: {\n        belongsTo: {\n          deviceClass: {\n            localField: 'deviceClass',\n            localKey: 'deviceClassId'\n          },\n          actionType: {\n            localField: 'actionType',\n            localKey: 'actionTypeId'\n          }\n        }\n      }\n\n    });\n\n    return DSDeviceClassActionType;\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSConnection', DSConnectionFactory)\n    .run(function(DSConnection) {});\n\n\n  DSConnectionFactory.$inject = ['$log', 'LocalForage'];\n\n  function DSConnectionFactory($log, LocalForage) {\n\n    LocalForage.localForageStore.registerAdapter('localForage', LocalForage.localForageAdapter, { default: true });\n\n    var Connection = LocalForage.localForageStore.defineResource({\n      name: 'connection',\n      relations: {\n        belongsTo: {\n          settings: {\n            localField: 'settings',\n            localKey: 'settingsId',\n            parent: true\n          }\n        }\n      }\n    });\n\n    return Connection;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.models')\n    .factory('DSActionType', DSActionTypeFactory)\n    .run(function(DSActionType) {});\n\n  DSActionTypeFactory.$inject = ['$log', 'DS'];\n\n  function DSActionTypeFactory($log, DS) {\n    \n    var staticMethods = {};\n\n    /*\n     * DataStore configuration\n     */\n    var DSActionType = DS.defineResource({\n\n      // API configuration\n      endpoint: 'actiontypes',\n\n      // Model configuration\n      idAttribute: 'id',\n      name: 'actionType',\n      relations: {\n        hasMany: {\n          deviceClassActionType: {\n            localField: 'deviceClassActionTypes',\n            foreignKey: 'actionTypeId'\n          },\n        }\n      },\n\n      // Computed properties\n      computed: {},\n\n      // Instance methods\n      methods: {\n        getParams: getParams,\n        getRuleActionParams: getRuleActionParams\n      },\n\n      // Lifecycle hooks\n      afterInject: function(resource, attrs) {\n        if(angular.isArray(attrs)) {\n          var arrayOfAttrs = attrs;\n          angular.forEach(arrayOfAttrs, function(attrs) {\n            _addUiData(resource, attrs);\n          });\n        } else {\n          _addUiData(resource, attrs);\n        }\n      }\n\n    });\n\n    return DSActionType;\n\n\n    /*\n     * Private method: _addUiData(resource, attrs)\n     */\n    function _addUiData(resource, attrs) {\n      var paramTypes = attrs.paramTypes;\n      \n      attrs.phrase = 'Execute \"' + attrs.name + '\"';\n\n      // Add phrase for moods\n      if(angular.isArray(paramTypes) && paramTypes.length > 0) {\n        attrs.phrase = attrs.phrase + ' with parameters';\n      }\n    }\n\n\n    /*\n     * Public method: getParams()\n     */\n    function getParams() {\n      /* jshint validthis: true */\n      var self = this;\n      var params = [];\n      var paramTypes = self.paramTypes;\n\n      angular.forEach(paramTypes, function(paramType) {\n        params.push({\n          name: paramType.name,\n          value: paramType.value\n        });\n      });\n\n      return params;\n    }\n\n    /*\n     * Public method: getRuleActionParams(params, actionParamType, eventParamType)\n     */\n    function getRuleActionParams(params, actionParamType, eventParamType) {\n      /* jshint validthis: true */\n      var self = this;\n      var ruleActionParams = [];\n\n      angular.forEach(params, function(param) {\n        if(actionParamType !== undefined && eventParamType !== undefined) {\n          if(param.name === actionParamType.name) {\n            ruleActionParams.push({\n              name: param.name,\n              eventParamName: eventParamType.name,\n              eventTypeId: eventParamType.eventDescriptor.eventTypeId\n            });\n          } else {\n            ruleActionParams.push({\n              name: param.name,\n              value: param.value\n            });\n          }\n        } else {\n          ruleActionParams.push({\n            name: param.name,\n            value: param.value\n          });\n        }\n      });\n\n      return ruleActionParams;\n    }\n\n  }\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.utils', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n  // module.exports = angular.module('guh.utils');\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n\n  angular\n    .module('guh.utils')\n    .factory('LocalForage', LocalForage);\n\n\n  LocalForage.$inject = ['$log'];\n\n  function LocalForage($log) {\n\n    // jshint unused:false \n    var LocalForage = {\n      localForageAdapter: new DSLocalForageAdapter(),\n      localForageStore: new JSData.DS()\n    };\n\n    return LocalForage;\n\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.utils')\n    .factory('File', FileFactory);\n\n  FileFactory.$inject = ['$log', '$templateCache'];\n\n  function FileFactory($log, $templateCache) {\n    \n    var File = {\n      checkFile: checkFile\n    };\n\n    return File;\n\n\n    /*\n     * Public method: checkFile(path, file)\n     */\n    function checkFile(path, file) {\n      // if(app.environment === 'production') {\n        // Production: One $templateCache entry per template\n        var cacheObject = $templateCache.get(path + file);\n\n        if(cacheObject !== undefined) {\n          return true;\n        } else {\n          return false;\n        }\n      /*} else if(app.environment === 'development') {\n        // Development: One HTML file per template\n        var request = new XMLHttpRequest();\n\n        request.open('HEAD', path + file, false);\n        request.send();\n\n        if(request.status === 200) {\n          return true;\n        } else {\n          return false;\n        }\n      }*/\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging', [\n      'guh.logging.hooks'\n    ])\n    .config(config);\n\n  config.$inject = ['$provide'];\n\n  function config($provide) {\n    // Exceptions\n    // $provide.decorator('$exceptionHandler', ['$injector', '$delegate', 'Logging', function($injector, $delegate, Logging) {\n    //   if(!Logging.angularServiceEnhanced.$exceptionHandler) {\n    //     return $delegate;\n    //   }\n\n    //   return function(exception, cause) {\n    //     $delegate(exception, cause);\n    //   }\n    // }]);\n\n    // Logs\n    $provide.decorator('$log', ['$injector', '$delegate', 'guhLogging', function($injector, $delegate, guhLogging) {\n      var decorator = {\n        log: log,\n        info: info,\n        warn: warn,\n        error: error\n      };\n\n      return decorator;\n\n\n      function _applyCallbacks(logType, args) {\n        var logTypeData = guhLogging.getLogType(logType);\n\n        // Pre callbacks\n        angular.forEach(logTypeData.preCallbacks, function(preCallbackProvider) {\n          var preCallback = $injector.get(preCallbackProvider);\n          preCallback.call(preCallback, {\n            type: logType,\n            args: args\n          });\n        });\n\n        // Console\n        if(guhLogging.isEnhanced(logType)) {\n          $delegate[logType].apply($delegate, args);\n          guhLogging[logType].apply(null, args);\n        } else {\n          $delegate[logType].apply($delegate, args);\n        }\n\n        // Post callbacks\n        angular.forEach(logTypeData.postCallbacks, function(postCallbackProvider) {\n          var postCallback = $injector.get(postCallbackProvider);\n          postCallback.call(postCallback, {\n            type: logType,\n            args: args\n          });\n        });\n      }\n\n      function log() {\n        var args = arguments;\n        _applyCallbacks('log', args);\n      }\n\n      function info() {\n        var args = arguments;\n        _applyCallbacks('info', args);\n      }\n\n      function warn() {\n        var args = arguments;\n        _applyCallbacks('warn', args);\n      }\n\n      function error() {\n        var args = arguments;\n        _applyCallbacks('error', args);\n      }\n    }]);\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.logging')\n    .provider('guhLogging', Logging);\n\n  Logging.$inject = ['$injector'];\n\n  function Logging($injector) {\n    var _logTypes = {\n      log: {},\n      info: {},\n      warn: {},\n      error: {}\n    };\n\n    var _hooks = {\n      http: 'guhLoggingHttpHook',\n      broadcast: 'guhLoggingBroadcastHook',\n      websocket: null\n    };\n\n    var provider = {\n      $get: $get,\n      enhance: enhance,\n      before: before,\n      after: after,\n      decorate: decorate\n    };\n\n    return provider;\n\n\n    // function _getArrayFromString(string) {\n    //   if(!angular.isString(string)) {\n    //     return;\n    //   }\n    // }\n\n    function _addHooks(prePost, logTypes, hooks) {\n      try {\n        if(angular.isUndefined(logTypes) || logTypes === null || !angular.isString(logTypes)) {\n          throw 'Wrong argument type. The argument \"logTypes\" should be a comma seperated String.';\n        }\n        if(angular.isDefined(hooks) && hooks !== null && !angular.isString(hooks)) {\n          throw 'Wrong argument type. The argument \"hooks\" should be a comma seperated String.';\n        }\n      } catch(error) {\n        return error;\n      }\n\n      var logTypesArray = logTypes.replace(/\\s+/g, '').split(',');\n      var hooksArray = hooks.replace(/\\s+/g, '').split(',');\n      var logTypeCallbacks = [];\n\n      // Check hooks\n      var callback;\n      angular.forEach(hooksArray, function(hook) {\n        if(angular.isDefined(_hooks[hook]) && _hooks[hook] !== null) {\n          logTypeCallbacks.push(_hooks[hook]);\n        }\n      });\n\n      // Initialize all log types with preCallbacks = [] / postCallbacks = []\n      angular.forEach(_logTypes, function(_logType) {\n        _logType[prePost + 'Callbacks'] = [];\n      });\n\n      // Set defined callbacks for log types\n      angular.forEach(logTypesArray, function(logType) {\n        if(angular.isDefined(_logTypes[logType])) {\n          _logTypes[logType][prePost + 'Callbacks'] = logTypeCallbacks;\n        }\n      });\n    }\n\n    function _getEnhancedArguments(args) {\n      // console.log('args', args, angular.isObject(args), angular.isArray(args));\n\n      var argsArray = args ? [].slice.call(args) : args;\n\n      // console.log('argsArray', argsArray, argsArray.length, angular.isArray(argsArray), argsArray[0]);\n\n      if(argsArray.length === 1) {\n        return argsArray[0];\n      } else {\n        return args;\n      }\n    }\n\n    function _addTimestamp() {\n\n    }\n\n\n    function $get() {\n      var service = {\n        isEnhanced: isEnhanced,\n        log: log,\n        info: info,\n        warn: warn,\n        error: error,\n        getLogType: getLogType\n      };\n\n      return service;\n\n\n      function isEnhanced(logType) {\n        return (angular.isDefined(_logTypes[logType]) && angular.isDefined(_logTypes[logType].enhanced)) ? _logTypes[logType].enhanced : false;\n      }\n\n      function log() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.log(arguments);\n      }\n\n      function info() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.info(arguments);\n      }\n\n      function warn() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.warn(arguments);\n      }\n\n      function error() {\n        // var args = _getEnhancedArguments(arguments);\n        // console.error(arguments);\n      }\n\n      function getLogType(logType) {\n        return _logTypes[logType];\n      }\n    }\n\n    function enhance(logTypes) {\n      try {\n        if(angular.isDefined(logTypes) && logTypes !== null && !angular.isString(logTypes)) {\n          throw 'Wrong argument type. The argument \"logTypes\" should be a comma seperated String.';\n        }\n      } catch(error) {\n        return error;\n      }\n\n      var logTypesArray = [];\n\n      // Set enhanced\n      if(angular.isString(logTypes)) {\n        logTypesArray = logTypes.replace(/\\s+/g, '').split(',');\n\n        // Initialize all log types with enhanced = false\n        angular.forEach(_logTypes, function(_logType) {\n          _logType.enhanced = false;\n        });\n\n        // Set defined enhanced values for log types\n        angular.forEach(logTypesArray, function(logType) {\n          if(angular.isDefined(_logTypes[logType])) {\n            _logTypes[logType].enhanced = true;\n          }\n        });\n      } else {\n        // If logTypes is undefined or null\n        // Initialize all log types with enhanced = true\n        angular.forEach(_logTypes, function(_logType) {\n          _logType.enhanced = true;\n        });\n      }\n    }\n\n    function before(logTypes, hooks) {\n      _addHooks('pre', logTypes, hooks);\n    }\n\n    function after(logTypes, hooks) {\n      _addHooks('post', logTypes, hooks);\n    }\n\n    function decorate(message) {\n\n    }\n  }\n\n}());\n","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.api', [])\n    .config(config);\n\n  config.$inject = [];\n\n  function config() {}\n\n}());","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *                                                                                     *\n * Copyright (C) 2015 Lukas Mayerhofer <lukas.mayerhofer@guh.guru>                     *\n *                                                                                     *\n * Permission is hereby granted, free of charge, to any person obtaining a copy        *\n * of this software and associated documentation files (the \"Software\"), to deal       *\n * in the Software without restriction, including without limitation the rights        *\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell           *\n * copies of the Software, and to permit persons to whom the Software is               *\n * furnished to do so, subject to the following conditions:                            *\n *                                                                                     *\n * The above copyright notice and this permission notice shall be included in all      *\n * copies or substantial portions of the Software.                                     *\n *                                                                                     *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR          *\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,            *\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE         *\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER              *\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,       *\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE       *\n * SOFTWARE.                                                                           *\n *                                                                                     *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('guh.api')\n    .factory('websocketService', websocketService);\n\n  websocketService.$inject = ['$log', '$rootScope', '$q', 'DS'];\n\n  function websocketService($log, $rootScope, $q, DS) {\n\n    var ws = null;\n    var callbacks = {};\n    var currentRequestId = 0;\n    var websocketService = {\n      close: close,\n      connect: connect,\n      reconnect: reconnect,\n      send: send\n    };\n\n    return websocketService;\n\n    /*\n     * Private function: _getRequestId()\n     */\n    function _getRequestId() {\n      currentRequestId = currentRequestId + 1;\n      if(currentRequestId > 10000) {\n        currentRequestId = 0;\n      }\n      return currentRequestId;\n    };\n\n\n    /*\n     * Public method: close()\n     */\n    function close() {\n      if(ws) {\n        ws = null;\n      }\n    }\n\n    /*\n     * Public method: connect()\n     */\n    function connect(url) {\n      if(ws) {\n        return;\n      }\n\n      if(angular.isUndefined(url)) {\n        $log.error('guh.api.websocketService:factory', 'Missing argument: url');\n      }\n\n      ws = new WebSocket(url);\n\n      ws.onopen = function(event) {\n        // Send broadcast event\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('WebsocketConnected', 'Successful connected to guh.');\n        });\n      };\n\n      ws.onclose = function(event) {\n        // Send broadcast event\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('WebsocketConnectionLost', 'The app has lost the connection to guh. Please check if you are connected to your network and if guh is running correctly.');\n        });\n      };\n\n      ws.onerror = function(event) {\n        // Send broadcast event\n        $rootScope.$apply(function() {\n          $rootScope.$broadcast('WebsocketConnectionError', 'There was an error connecting to guh.');\n        });\n      };\n\n      ws.onmessage = function(message) {\n        var data = angular.fromJson(message.data);\n\n        if(angular.isDefined(data.notification)) {\n          switch(data.notification) {\n            // Devices.DeviceAdded\n            case 'Devices.DeviceAdded':\n              var deviceId = data.params.device.id;\n              var device = DS.get('device', deviceId);\n\n              if(angular.isUndefined(device)) {\n                var injectedItem = DS.inject('device', data.params.device);\n\n                // Send broadcast event\n                if(DS.is('device', injectedItem)) {\n                  $rootScope.$broadcast('ReloadView', injectedItem.deviceClass.name + ' was added.');\n                }          \n              }\n\n              break;\n\n\n            // TODO: Devices.DeviceChanged\n\n\n            // Devices.DeviceRemoved\n            case 'Devices.DeviceRemoved':\n              var deviceId = data.params.deviceId;\n              var ejectedItem = DS.eject('device', deviceId);\n\n              if(angular.isDefined(ejectedItem)) {\n                // Send broadcast event\n                $rootScope.$broadcast('ReloadView', 'Device was removed.', ejectedItem);\n              }\n\n              break;\n\n\n            // Devices.StateChanged\n            case 'Devices.StateChanged':\n              var deviceId = data.params.deviceId;\n              var stateTypeId = data.params.stateTypeId;\n              var value = data.params.value;\n              DS.inject('state', {\n                id: '' + deviceId + '_' + stateTypeId,\n                deviceId: deviceId,\n                stateTypeId: stateTypeId,\n                value: value\n              });\n              break;\n\n\n            // TODO: Events.EventTriggered\n\n\n            // TODO: Logging.LogDatabaseUpdated\n\n\n            // TODO: Logging.LogEntryAdded\n\n\n            // TODO: Rules.RuleActiveChanged\n\n\n            // Rules.RuleAdded\n            case 'Rules.RuleAdded':\n              var ruleId = data.params.rule.id;\n              var rule = DS.get('rule', ruleId);\n\n              if(angular.isUndefined(rule)) {\n                var injectedItem = DS.inject('rule', data.params.rule);\n\n                // Send broadcast event\n                if(DS.is('rule', injectedItem)) {\n                  $rootScope.$broadcast('ReloadView', injectedItem.name + ' was added.');\n                }\n              }\n\n              break;\n\n\n            // Rules.ConfigurationChanged\n            case 'Rules.ConfigurationChanged':\n              var rule = data.params.rule;\n              var injectedItem = DS.inject('rule', rule);\n\n              // Send broadcast event\n              if(DS.is('rule', injectedItem)) {\n                $rootScope.$broadcast('ReloadView', injectedItem.name + ' was updated.');\n              }\n\n              break;\n\n\n            // Rules.RuleRemoved\n            case 'Rules.RuleRemoved':\n              var ruleId = data.params.ruleId;\n              var ejectedItem = DS.eject('rule', ruleId);\n\n              if(angular.isDefined(ejectedItem)) {\n                // Send broadcast event\n                $rootScope.$broadcast('ReloadView', 'Rule was removed.');\n              }\n\n              break;\n\n\n            default:\n              // $log.warn('Type of notification not handled:', data);\n          }\n\n        // } else if(angular.isDefined(data.authenticationRequired)) {\n        } else if(angular.isDefined(data.id) && data.id === 0) {\n          $rootScope.$apply(function() {\n            $rootScope.$broadcast('InitialHandshake', data);\n          });\n        } else if(angular.isDefined(data.id)) {\n          if(data.status === 'success') {\n            if(angular.isDefined(data.params.deviceError) && data.params.deviceError !== 'DeviceErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else if(angular.isDefined(data.params.loggingError) && data.params.loggingError !== 'LoggingErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else if(angular.isDefined(data.params.ruleError) && data.params.ruleError !== 'RuleErrorNoError') {\n              $rootScope.$apply(callbacks[data.id].callback.reject(data.params));\n            } else {\n              $rootScope.$apply(callbacks[data.id].callback.resolve(data.params));\n            }\n          } else {\n            $rootScope.$apply(callbacks[data.id].callback.reject(data.error));\n          }\n          \n          delete callbacks[data.id];\n        }\n      };\n    }\n\n    /*\n     * Public method: reconnect(url)\n     */\n    function reconnect(url) {\n      websocketService.close();\n      websocketService.connect(url);\n    }\n\n    /*\n     * Public method: send(request)\n     */\n    function send(request) {\n      var defer = $q.defer();\n      var requestId = _getRequestId();\n\n      callbacks[requestId] = {\n        time: new Date(),\n        callback: defer\n      };\n\n      request.id = requestId;\n\n      ws.send(angular.toJson(request));\n\n      return defer.promise;\n    }\n\n  }\n\n}());"],"sourceRoot":"/source/"}