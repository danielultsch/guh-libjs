!function(){"use strict";function config(DSProvider,app){DSProvider.defaults.basePath=app.apiUrl}angular.module("guh.models",["js-data"]).config(config),config.$inject=["DSProvider","app"]}(),function(){"use strict";function DSVendorFactory($log,DS){var DSVendor=DS.defineResource({endpoint:"vendors",suffix:".json",idAttribute:"id",name:"vendor",relations:{hasMany:{deviceClass:{localField:"deviceClasses",foreignKey:"vendorId"}}},computed:{},methods:{}});return DSVendor}angular.module("guh.models").factory("DSVendor",DSVendorFactory).run(function(DSVendor){}),DSVendorFactory.$inject=["$log","DS"]}(),function(){"use strict";function DSStateTypeFactory($log,DS,modelsHelper){function _addUiData(resource,attrs){var paramTypes=attrs.paramTypes,regExp=/\s\[([^)]+)\]/,searchUnit=name.replace(regExp,""),phrase=attrs.name;regExp.test(name)&&(phrase=searchUnit),attrs.phrase="When value of "+phrase+" is",attrs.unit=modelsHelper.getUnit(attrs.name),angular.forEach(paramTypes,function(paramType){paramType=modelsHelper.addUiData("input",paramType)})}var DSStateType=DS.defineResource({endpoint:"state_types",suffix:".json",idAttribute:"id",name:"stateType",relations:{belongsTo:{deviceClass:{localField:"deviceClass",localKey:"deviceClassId",parent:!0}}},computed:{},methods:{},afterInject:function(resource,attrs){if(angular.isArray(attrs)){var arrayOfAttrs=attrs;angular.forEach(arrayOfAttrs,function(attrs){_addUiData(resource,attrs)})}else _addUiData(resource,attrs)}});return DSStateType}angular.module("guh.models").factory("DSStateType",DSStateTypeFactory).run(function(DSStateType){}),DSStateTypeFactory.$inject=["$log","DS","modelsHelper"]}(),function(){"use strict";function DSStateFactory($log,DS){var DSState=DS.defineResource({endpoint:"states",suffix:".json",idAttribute:"stateTypeId",name:"state",relations:{belongsTo:{device:{localField:"device",localKey:"deviceId",parent:!0}}},computed:{},methods:{}});return DSState}angular.module("guh.models").factory("DSState",DSStateFactory).run(function(DSState){}),DSStateFactory.$inject=["$log","DS"]}(),function(){"use strict";function DSRuleFactory($log,DS){function remove(){var self=this;return DSRule.destroy(self.id)}var DSRule=DS.defineResource({endpoint:"rules",suffix:".json",idAttribute:"id",name:"rule",relations:{},computed:{},methods:{remove:remove}});return DSRule}angular.module("guh.models").factory("DSRule",DSRuleFactory).run(function(DSRule){}),DSRuleFactory.$inject=["$log","DS"]}(),function(){"use strict";function DSParamTypeFactory($log,DS){var DSParamType=DS.defineResource({name:"paramType",relations:{belongsTo:{deviceClass:{localField:"deviceClass",localKey:"deviceClassId"}}},computed:{},methods:{}});return DSParamType}angular.module("guh.models").factory("DSParamType",DSParamTypeFactory).run(function(DSParamType){}),DSParamTypeFactory.$inject=["$log","DS"]}(),function(){"use strict";function modelsHelper($log,$q,DS,DSParamType,File,app){function _getInputPath(directiveName,filename){return app.basePaths.ui+directiveName+"/templates/"+filename+app.fileExtensions.html}function _getActionTemplate(guhType){var template,allowedValues=void 0===guhType.allowedValues?null:guhType.allowedValues,inputType=void 0===guhType.inputType?null:guhType.inputType,type=void 0===guhType.type?null:guhType.type,directiveNameAction="action-param",directiveNameInput="input";switch(type){case"bool":template=_getInputPath(directiveNameAction,directiveNameAction+"-toggle-button");break;case"int":case"uint":template=_getInputPath(directiveNameAction,directiveNameAction+"-slider");break;case"double":template=_getInputPath(directiveNameAction,directiveNameAction+"-slider");break;case"QColor":template=_getInputPath(directiveNameAction,directiveNameAction+"-color-picker");break;case"QString":template=allowedValues?_getInputPath(directiveNameInput,directiveNameInput+"-select"):inputType?_getInputPath(directiveNameInput,directiveNameInput+app.inputTypes[inputType]):_getInputPath(directiveNameInput,directiveNameInput+"-text");break;default:template=_getInputPath(directiveNameAction,"template-not-available")}return template}function _getInputTemplate(guhType){var template,allowedValues=void 0===guhType.allowedValues?null:guhType.allowedValues,inputType=void 0===guhType.inputType?null:guhType.inputType,type=void 0===guhType.type?null:guhType.type,directiveName="input";switch(type){case"bool":template=_getInputPath(directiveName,directiveName+"-checkbox");break;case"int":case"uint":template=_getInputPath(directiveName,directiveName+"-number-integer");break;case"double":template=_getInputPath(directiveName,directiveName+"-number-decimal");break;case"QColor":template=_getInputPath(directiveName,directiveName+"-color");break;case"QString":template=allowedValues?_getInputPath(directiveName,directiveName+"-select"):inputType?_getInputPath(directiveName,directiveName+app.inputTypes[inputType]):_getInputPath(directiveName,directiveName+"-text");break;default:template=_getInputPath(directiveName,"template-not-available")}return template}function _getValue(guhType){var value,type=void 0===guhType.type?null:guhType.type;switch(type){case"bool":value=guhType.defaultValue||!1;break;case"int":case"uint":value=guhType.defaultValue||0;break;case"double":value=guhType.defaultValue||0;break;case"QColor":value=guhType.defaultValue||"0,0,0";break;case"QString":value=guhType.defaultValue||"";break;default:value=guhType.defaultValue||void 0}return value}function addUiData(directiveName,guhType){return guhType.operator=app.valueOperator.is.operators[0],guhType.actionTemplateUrl=_getActionTemplate(guhType),guhType.inputTemplateUrl=_getInputTemplate(guhType),guhType.value=_getValue(guhType),guhType}function checkTemplateUrl(templateUrl){var pathElements=templateUrl.split("/"),file=pathElements.pop(),path=pathElements.join("/")+"/";if(void 0!==templateUrl&&""!==templateUrl){var fileExists=$q.when(File.checkFile(path,file)).then(function(fileExists){return fileExists?templateUrl:path+"template-not-available.html"});return fileExists}return path+"template-not-defined.html"}function getTemplateUrl(directiveName,filename){var templateUrl=_getInputPath(directiveName,filename);return checkTemplateUrl(templateUrl)}function getUnit(name){var regExp=/\[([^)]+)\]/,searchUnit=regExp.exec(name);return angular.isArray(searchUnit)&&2===searchUnit.length?searchUnit[1]:""}function setBasePath(){DS.defaults.basePath=app.apiUrl}var modelsHelper={addUiData:addUiData,checkTemplateUrl:checkTemplateUrl,getTemplateUrl:getTemplateUrl,getUnit:getUnit,setBasePath:setBasePath};return modelsHelper}angular.module("guh.models").factory("modelsHelper",modelsHelper),modelsHelper.$inject=["$log","$q","DS","DSParamType","File","app"]}(),function(){"use strict";function DSEventTypeFactory($log,DS,modelsHelper){function _addUiData(resource,attrs){var paramTypes=attrs.paramTypes,phrase="When "+attrs.name;attrs.phrase=angular.isArray(paramTypes)&&0===paramTypes.length?phrase+" is detected":phrase+" is detcted and parameters are",attrs.unit=modelsHelper.getUnit(attrs.name),angular.forEach(paramTypes,function(paramType){paramType=modelsHelper.addUiData("input",paramType)})}function getParamDescriptors(paramTypes){var paramDescriptors=[];return angular.forEach(paramTypes,function(paramType){paramDescriptors.push({name:paramType.name,operator:paramType.operator,value:paramType.value})}),paramDescriptors}var DSEventType=DS.defineResource({endpoint:"event_types",suffix:".json",idAttribute:"id",name:"eventType",relations:{belongsTo:{deviceClass:{localField:"deviceClass",localKey:"deviceClassId",parent:!0}}},computed:{},methods:{getParamDescriptors:getParamDescriptors},afterInject:function(resource,attrs){if(angular.isArray(attrs)){var arrayOfAttrs=attrs;angular.forEach(arrayOfAttrs,function(attrs){_addUiData(resource,attrs)})}else _addUiData(resource,attrs)}});return DSEventType}angular.module("guh.models").factory("DSEventType",DSEventTypeFactory).run(function(DSEventType){}),DSEventTypeFactory.$inject=["$log","DS","modelsHelper"]}(),function(){"use strict";function DSDeviceFactory($log,DS,libs,app,websocketService){function _addCustomName(resource,attrs){var nameParameter=libs._.find(attrs.params,function(param){return"name"===param.name});attrs.name=void 0===nameParameter?"Name":nameParameter.value}function subscribe(deviceId,cb){var self=this;return websocketService.subscribe(self.id,cb)}function unsubscribe(){var self=this;return websocketService.unsubscribe(self.id)}function pair(deviceClassId,deviceData){var device={},options={};return deviceData=deviceData||{},device.deviceClassId=deviceClassId||"",device.deviceDescriptorId=deviceData.id||"",device.deviceParams=[],angular.forEach(deviceData.deviceParamTypes,function(deviceParamType){var deviceParam={};deviceParam.name=deviceParamType.name,deviceParam.value=deviceParamType.value,device.deviceParams.push(deviceParam)}),options.device=device,DS.adapters.http.POST(app.apiUrl+"/devices.json",options)}function confirmPairing(pairingTransactionId){var options={},params={};return params.pairingTransactionId=pairingTransactionId,options.params=params,DS.adapters.http.POST(app.apiUrl+"/devices/confirm_pairing.json",options)}function add(deviceClassId,deviceData){var device={};return deviceData=deviceData||{},device.deviceClassId=deviceClassId||"",device.deviceDescriptorId=deviceData.id||"",$log.log("add deviceData",deviceData),device.deviceParams=[],deviceData.deviceParamTypes?angular.forEach(deviceData.deviceParamTypes,function(deviceParamType){var deviceParam={};deviceParam.name=deviceParamType.name,deviceParam.value=deviceParamType.value,device.deviceParams.push(deviceParam)}):deviceData.params&&(device.deviceParams=deviceData.params),$log.log("add device.deviceParams",device.deviceParams),device.deviceParams.push({name:"name",value:"Name"}),$log.log("add device.deviceParams",device.deviceParams),DSDevice.create({device:device})}function edit(deviceId,deviceData){var device={};return deviceData=deviceData||{},device.deviceDescriptorId=deviceData.id||"",device.deviceParams=[],angular.forEach(deviceData.deviceParamTypes,function(deviceParamType){var deviceParam={};deviceParam.name=deviceParamType.name,deviceParam.value=deviceParamType.value,device.deviceParams.push(deviceParam)}),DSDevice.update(deviceId,{device:device})}function executeAction(actionType){var self=this,options={};return options.params=actionType.getParams(),DS.adapters.http.POST(app.apiUrl+"/devices/"+self.id+"/actions/"+actionType.id+"/execute.json",options)}function remove(){var self=this;return DSDevice.destroy(self.id)}function getEventDescriptor(eventType){var self=this,eventDescriptor={},paramDescriptors=[];return eventDescriptor.deviceId=self.id,eventDescriptor.eventTypeId=eventType.id,paramDescriptors=eventType.getParamDescriptors(eventType.paramTypes),paramDescriptors.length>0&&(eventDescriptor.paramDescriptors=paramDescriptors),eventDescriptor}function getStateDescriptor(stateType){var self=this,stateDescriptor={};return stateDescriptor.deviceId=self.id,stateDescriptor.operator=stateType.operator,stateDescriptor.stateTypeId=stateType.id,stateDescriptor.value=stateType.value,stateDescriptor}function getAction(actionType,actionParamType,eventParamType){var self=this,action={},ruleActionParams=[];return ruleActionParams=actionType.getRuleActionParams(actionType,actionParamType,eventParamType),ruleActionParams.length>0&&(action.ruleActionParams=ruleActionParams),action.actionTypeId=actionType.id,action.deviceId=self.id,action}var DSDevice=DS.defineResource({endpoint:"devices",suffix:".json",idAttribute:"id",name:"device",relations:{belongsTo:{deviceClass:{localField:"deviceClass",localKey:"deviceClassId"}},hasMany:{state:{localField:"states",foreignKey:"deviceId"}}},computed:{},methods:{subscribe:subscribe,unsubscribe:unsubscribe,executeAction:executeAction,remove:remove,getEventDescriptor:getEventDescriptor,getStateDescriptor:getStateDescriptor,getAction:getAction},afterInject:function(resource,attrs){if(angular.isArray(attrs)){var arrayOfAttrs=attrs;angular.forEach(arrayOfAttrs,function(attrs){_addCustomName(resource,attrs)})}else _addCustomName(resource,attrs)}});return angular.extend(DSDevice,{add:add,edit:edit,pair:pair,confirmPairing:confirmPairing}),DSDevice}angular.module("guh.models").factory("DSDevice",DSDeviceFactory).run(function(DSDevice){}),DSDeviceFactory.$inject=["$log","DS","libs","app","websocketService"]}(),function(){"use strict";function DSDeviceClassFactory($log,DS,DSHttpAdapter,DSState,app,libs,modelsHelper){function _getInputPath(filename){return app.basePaths.devices+"detail/device-class-templates/"+filename+app.fileExtensions.html}function _addUiTemplate(name){var templateName=name.toLowerCase().replace(/\s/g,"-").replace(/([.*+?^=!:${}()|\[\]\/\\])/g,""),templateUrl=_getInputPath("device-class-"+templateName);return modelsHelper.checkTemplateUrl(templateUrl)}function _addUiData(resource,attrs){var discoveryParamTypes=attrs.discoveryParamTypes,paramTypes=attrs.paramTypes,stateTypes=attrs.stateTypes;angular.forEach(discoveryParamTypes,function(paramType){paramType=modelsHelper.addUiData("input",paramType)}),angular.forEach(paramTypes,function(paramType){paramType=modelsHelper.addUiData("input",paramType)}),angular.forEach(stateTypes,function(stateType){stateType=modelsHelper.addUiData("input",stateType)})}function _mapClassType(resource,attrs){var devServices=["Mock Device","Mock Device (Auto created)"],gateways=["Hue Bridge"],moods=["Mood"],services=["Alarm","Application launcher","Bashscript launcher","Button","Countdown","Custom mail","Google mail","ON/OFF Button","Today","Toggle Button","UDP Commander","Wake On Lan","Weather from OpenWeatherMap","Yahoo mail"];attrs.classType="device",libs._.contains(devServices,attrs.name)?attrs.classType="dev-service":libs._.contains(moods,attrs.name)?attrs.classType="mood":libs._.contains(gateways,attrs.name)?attrs.classType="gateway":libs._.contains(services,attrs.name)&&(attrs.classType="service")}function _mapStates(resource,attrs){var actionTypes=attrs.actionTypes,eventTypes=attrs.eventTypes,stateTypes=attrs.stateTypes,stateIds=libs._.pluck(stateTypes,"id");angular.forEach(actionTypes,function(actionType){actionType.hasState=libs._.contains(stateIds,actionType.id)?!0:!1}),angular.forEach(eventTypes,function(eventType){eventType.hasState=libs._.contains(stateIds,eventType.id)?!0:!1})}function discover(){var self=this,discoveryParams=[];return angular.forEach(self.discoveryParamTypes,function(discoveryParamType){var discoveryParam={};discoveryParam.name=discoveryParamType.name,discoveryParam.value=discoveryParamType.value,discoveryParams.push(discoveryParam)}),DSHttpAdapter.GET(app.apiUrl+"/device_classes/"+self.id+"/discover.json",{params:{device_class_id:self.id,discovery_params:angular.toJson(discoveryParams)}})}function getCreateMethod(){var self=this,addBasePath="app/components/devices/add/pairing-templates/",editBasePath="app/components/devices/edit/pairing-templates/",createMethodData=null;return self.createMethods.indexOf("CreateMethodDiscovery")>-1?createMethodData={title:"Discovery",addTemplate:addBasePath+"devices-add-create-discovery.html",editTemplate:editBasePath+"devices-edit-create-discovery.html"}:self.createMethods.indexOf("CreateMethodUser")>-1?createMethodData={title:"User",addTemplate:addBasePath+"devices-add-create-user.html",editTemplate:editBasePath+"devices-edit-create-user.html"}:self.createMethods.indexOf("CreateMethodAuto")>-1?createMethodData={title:"Auto",addTemplate:null,ediTemplate:null}:$log.error("CreateMethod not implemented."),createMethodData}function getSetupMethod(){var self=this,addBasePath="app/components/devices/add/pairing-templates/",editBasePath="app/components/devices/edit/pairing-templates/",setupMethodData={};switch(self.setupMethod){case"SetupMethodJustAdd":setupMethodData=null;break;case"SetupMethodDisplayPin":setupMethodData={title:"Display Pin",addTemplate:addBasePath+"devices-add-setup-display-pin.html",editTemplate:editBasePath+"devices-edit-setup-display-pin.html"};break;case"SetupMethodEnterPin":setupMethodData={title:"Enter Pin",addTemplate:addBasePath+"devices-add-setup-enter-pin.html",editTemplate:editBasePath+"devices-edit-setup-enter-pin.html"};break;case"SetupMethodPushButton":setupMethodData={title:"Push Button",addTemplate:addBasePath+"devices-add-setup-push-button.html",editTemplate:editBasePath+"devices-edit-setup-push-button.html"};break;default:$log.error("SetupMethod not implemented.")}return setupMethodData}var DSDeviceClass=DS.defineResource({endpoint:"device_classes",suffix:".json",idAttribute:"id",name:"deviceClass",relations:{belongsTo:{vendor:{localField:"vendor",localKey:"vendorId"}},hasMany:{actionType:{localField:"actionTypes",foreignKey:"deviceClassId"},eventType:{localField:"eventTypes",foreignKey:"deviceClassId"},stateType:{localField:"stateTypes",foreignKey:"deviceClassId"}}},computed:{templateUrl:["name",_addUiTemplate]},methods:{discover:discover,getCreateMethod:getCreateMethod,getSetupMethod:getSetupMethod},afterInject:function(resource,attrs){if(angular.isArray(attrs)){var arrayOfAttrs=attrs;angular.forEach(arrayOfAttrs,function(attrs){_addUiData(resource,attrs),_mapClassType(resource,attrs),_mapStates(resource,attrs)})}else _addUiData(resource,attrs),_mapClassType(resource,attrs),_mapStates(resource,attrs)}});return DSDeviceClass}angular.module("guh.models").factory("DSDeviceClass",DSDeviceClassFactory).run(function(DSDeviceClass){}),DSDeviceClassFactory.$inject=["$log","DS","DSHttpAdapter","DSState","app","libs","modelsHelper"]}(),function(){"use strict";function DSActionTypeFactory($log,DS,modelsHelper){function _addUiData(resource,attrs){function _handleParamType(paramType){paramType=modelsHelper.addUiData("action",paramType),paramType.dependsOnTrigger=!1}var paramTypes=attrs.paramTypes,phrase='Execute "'+attrs.name+'"';attrs.phrase=angular.isArray(paramTypes)&&0===paramTypes.length?phrase+".":phrase+" with parameters",angular.forEach(paramTypes,_handleParamType)}function getParams(){var self=this,params=[],paramTypes=self.paramTypes;return angular.forEach(paramTypes,function(paramType){params.push({name:paramType.name,value:paramType.value})}),params}function getRuleActionParams(actionType,actionParamType,eventParamType){var self=this,ruleActionParams=[],paramTypes=self.paramTypes;return angular.forEach(paramTypes,function(paramType){ruleActionParams.push(void 0!==actionParamType&&void 0!==eventParamType?paramType.name===actionParamType.name?{name:paramType.name,eventParamName:eventParamType.name,eventTypeId:eventParamType.eventDescriptor.eventTypeId}:{name:paramType.name,value:paramType.value}:{name:paramType.name,value:paramType.value})}),ruleActionParams}var DSActionType=DS.defineResource({endpoint:"action_types",suffix:".json",idAttribute:"id",name:"actionType",relations:{belongsTo:{deviceClass:{localField:"deviceClass",localKey:"deviceClassId",parent:!0}}},computed:{},methods:{getParams:getParams,getRuleActionParams:getRuleActionParams},afterInject:function(resource,attrs){if(angular.isArray(attrs)){var arrayOfAttrs=attrs;angular.forEach(arrayOfAttrs,function(attrs){_addUiData(resource,attrs)})}else _addUiData(resource,attrs)}});return DSActionType}angular.module("guh.models").factory("DSActionType",DSActionTypeFactory).run(function(DSActionType){}),DSActionTypeFactory.$inject=["$log","DS","modelsHelper"]}(),function(){"use strict";function config(DSProvider,app){DSProvider.defaults.basePath=app.apiUrl}angular.module("guh.utils",["js-data"]).config(config),config.$inject=["DSProvider","app"]}(),function(){"use strict";function config(){}angular.module("guh.api",[]).config(config),config.$inject=[]}(),function(){"use strict";function websocketService($log,$rootScope,libs,app){function close(){websocketService.ws&&(websocketService.ws=null)}function connect(){if($log.log("Connect to websocket."),!websocketService.ws){var ws=new WebSocket(app.websocketUrl);ws.onopen=function(event){$log.log("Successfully connected with websocket.",event),$rootScope.$apply(function(){$rootScope.$broadcast("WebsocketConnected","Successful connected to guh.")})},ws.onclose=function(event){$log.log("Closed websocket connection.",event),$rootScope.$apply(function(){$rootScope.$broadcast("WebsocketConnectionLost","The app has lost the connection to guh. Please check if you are connected to your network and if guh is running correctly.")})},ws.onerror=function(){$log.error("There was an error with the websocket connection."),$rootScope.$apply(function(){$rootScope.$broadcast("WebsocketConnectionError","There was an error connecting to guh.")})},ws.onmessage=function(message){var data=angular.fromJson(message.data);if(data.notification===app.notificationTypes.devices.stateChanged){if($log.log("Device state changed.",data),libs._.has(websocketService.callbacks,data.params.deviceId)){var cb=websocketService.callbacks[data.params.deviceId];cb(data)}}else $log.warn("Type of notification not handled:"+data.notification)},websocketService.ws=ws}}function reconnect(){websocketService.close(),websocketService.connect()}function subscribe(id,cb){$log.log("Subscribe to websocket."),websocketService.ws||websocketService.connect(),websocketService.callbacks[id]=cb}function unsubscribe(id){$log.log("Unsubscribe from websocket.",id),delete websocketService.callbacks[id]}var websocketService={ws:null,callbacks:{},close:close,connect:connect,reconnect:reconnect,subscribe:subscribe,unsubscribe:unsubscribe};return websocketService}angular.module("guh.api").factory("websocketService",websocketService),websocketService.$inject=["$log","$rootScope","libs","app"]}();
//# sourceMappingURL=guh-libjs.min.js.map